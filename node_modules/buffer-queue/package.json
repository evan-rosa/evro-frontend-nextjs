{
  "_args": [
    [
      {
        "raw": "buffer-queue@~1.0.0",
        "scope": null,
        "escapedName": "buffer-queue",
        "name": "buffer-queue",
        "rawSpec": "~1.0.0",
        "spec": ">=1.0.0 <1.1.0",
        "type": "range"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/s3-stream-upload"
    ]
  ],
  "_from": "buffer-queue@>=1.0.0 <1.1.0",
  "_id": "buffer-queue@1.0.0",
  "_inCache": true,
  "_location": "/buffer-queue",
  "_nodeVersion": "1.1.0",
  "_npmUser": {
    "name": "jsantell",
    "email": "jsantell@gmail.com"
  },
  "_npmVersion": "2.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "buffer-queue@~1.0.0",
    "scope": null,
    "escapedName": "buffer-queue",
    "name": "buffer-queue",
    "rawSpec": "~1.0.0",
    "spec": ">=1.0.0 <1.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/s3-stream-upload"
  ],
  "_resolved": "http://registry.npmjs.org/buffer-queue/-/buffer-queue-1.0.0.tgz",
  "_shasum": "3d253fe2f0ab70e851d728712e8cd6f914a8c002",
  "_shrinkwrap": null,
  "_spec": "buffer-queue@~1.0.0",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/s3-stream-upload",
  "author": {
    "name": "Jordan Santell"
  },
  "bugs": {
    "url": "https://github.com/jsantell/buffer-queue/issues"
  },
  "dependencies": {},
  "description": "fast buffer storage",
  "devDependencies": {
    "chai": "^2.1.1",
    "mocha": "^2.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "3d253fe2f0ab70e851d728712e8cd6f914a8c002",
    "tarball": "https://registry.npmjs.org/buffer-queue/-/buffer-queue-1.0.0.tgz"
  },
  "gitHead": "622a4d6024c079ecc440631da042a3f3aa6131b2",
  "homepage": "https://github.com/jsantell/buffer-queue",
  "keywords": [
    "buffer",
    "store",
    "queue",
    "stack"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jsantell",
      "email": "jsantell@gmail.com"
    }
  ],
  "name": "buffer-queue",
  "optionalDependencies": {},
  "readme": "# buffer-queue\n\n[![Build Status](http://img.shields.io/travis/jsantell/buffer-queue.svg?style=flat-square)](https://travis-ci.org/jsantell/buffer-queue)\n[![Build Status](http://img.shields.io/npm/v/buffer-queue.svg?style=flat-square)](https://www.npmjs.org/package/buffer-queue)\n\nA fast buffer store, for queueing up buffer chunks to later drain as a full buffer for streams. Faster than `Buffer.concat` on every chunk.\n\n## Install\n\n```\nnpm install buffer-queue\n```\n\n## Usage\n\nExample of a transform stream that only writes downstream 1MB at a time, storing\nup buffers in the buffer store.\n\n```javascript\nvar Transform = require(\"stream\").Transform;\nvar util = require(\"util\");\nvar Store = require(\"buffer-queue\");\n\n/**\n * Transform stream that limits writes to 1MB at a time\n */\nfunction ThrottleStream (limit) {\n  this.limit = limit || 1024 * 1024;\n  this.store = new Store();\n  Transform.call(this);\n}\nutil.inherits(ThrottleStream, Transform);\n\nThrottleStream.prototype._transform = function (chunk, enc, callback) {\n  this.store.push(chunk);\n  var data;\n\n  // While we have more in our store than the limit, then push\n  // out a chunk\n  while (this.store.length() > this.limit && data = this.store.shift(this.limit)) {\n    this.push(data);\n  }\n  callback();\n};\n\nThrottleStream.prototype._flush = function (callback) {\n  var data;\n  while (data = this.store.shift(this.limit)) {\n    this.push(data);\n  }\n  callback();\n};\n```\n\n## API\n\n### `BufferStore()`\n\nConstructor for a buffer store.\n\n#### `store.push(buffer)`\n\nPushes a buffer to the store.\n\n#### `store.shift(n)`\n\nReturns the first `n` bytes of the entire buffer store and removes from the store.\n\n#### `store.empty()`\n\nEmpties the entire internal buffer store.\n\n#### `store.length()`\n\nReturns the length of the internal buffer store in bytes.\n\n#### `store.drain()`\n\nEmpties and returns the internal buffer store. Use `store.empty()` if you are not interested in the return value.\n\n## Testing\n\n```\nnpm test\n```\n\n## License\n\nMIT License, Copyright (c) 2015 Jordan Santell\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jsantell/buffer-queue.git"
  },
  "scripts": {
    "test": "mocha --reporter spec --ui bdd"
  },
  "version": "1.0.0"
}
