{
  "_args": [
    [
      {
        "raw": "rc-table@~6.10.5",
        "scope": null,
        "escapedName": "rc-table",
        "name": "rc-table",
        "rawSpec": "~6.10.5",
        "spec": ">=6.10.5 <6.11.0",
        "type": "range"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/antd"
    ]
  ],
  "_from": "rc-table@~6.10.5",
  "_hasShrinkwrap": false,
  "_id": "rc-table@6.10.11",
  "_location": "/rc-table",
  "_nodeVersion": "12.14.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rc-table_6.10.11_1578548479232_0.6559730792467751"
  },
  "_npmUser": {
    "name": "afc163",
    "email": "afc163@gmail.com"
  },
  "_npmVersion": "6.13.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rc-table@~6.10.5",
    "scope": null,
    "escapedName": "rc-table",
    "name": "rc-table",
    "rawSpec": "~6.10.5",
    "spec": ">=6.10.5 <6.11.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd"
  ],
  "_resolved": "https://registry.npmjs.org/rc-table/-/rc-table-6.10.11.tgz",
  "_shasum": "fffe9c1b56de49f04d75bab3e28458e8c7a22f33",
  "_shrinkwrap": null,
  "_spec": "rc-table@~6.10.5",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/antd",
  "bugs": {
    "url": "http://github.com/react-component/table/issues"
  },
  "dependencies": {
    "classnames": "^2.2.5",
    "component-classes": "^1.2.6",
    "lodash": "^4.17.5",
    "mini-store": "^2.0.0",
    "prop-types": "^15.5.8",
    "rc-util": "^4.13.0",
    "react-lifecycles-compat": "^3.0.2",
    "shallowequal": "^1.0.2"
  },
  "description": "table ui component for react",
  "devDependencies": {
    "@types/classnames": "^2.2.9",
    "@types/react": "^16.9.2",
    "@types/react-dom": "^16.9.0",
    "@umijs/fabric": "^1.1.10",
    "cross-env": "^6.0.3",
    "enzyme": "^3.1.0",
    "enzyme-adapter-react-16": "^1.0.1",
    "enzyme-to-json": "^3.1.2",
    "eslint": "^6.8.0",
    "father": "^2.22.0",
    "immutability-helper": "^3.0.0",
    "less": "^3.10.3",
    "np": "^5.1.0",
    "prettier": "^1.11.1",
    "rc-animate": "^2.3.0",
    "rc-dropdown": "~2.0.1",
    "rc-menu": "^7.4.23",
    "react": "^16.0.0",
    "react-dnd": "^2.5.4",
    "react-dnd-html5-backend": "^2.5.4",
    "react-dom": "^16.0.0",
    "react-resizable": "^1.7.5",
    "react-test-renderer": "^16.0.0",
    "react-virtualized": "^9.12.0",
    "styled-components": "^4.3.2",
    "typescript": "^3.6.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-YcTlpO4RKlcM7Mio2FjcUOqRUyGU4edtOBG4x5kwZNHwZdfBm7m6VQuyQ/i6qec5S67EP86wiFbmKU54Z2HtFQ==",
    "shasum": "fffe9c1b56de49f04d75bab3e28458e8c7a22f33",
    "tarball": "https://registry.npmjs.org/rc-table/-/rc-table-6.10.11.tgz",
    "fileCount": 79,
    "unpackedSize": 285454,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeFrz/CRA9TVsSAnZWagAAM9MP/1SQyjbtB/ElH3ZFP923\npc7FYzezI0OGt+Ja5aXOmXg58U5hY5H+IQRDWUfPGtGS79Jh2Iy/Th7ZlKuC\n61K60RBaz5PBC99AdlNBBVmDfff/Vdr1s7fcS2k0cGdItwiysYO2aPsM4tvU\ntMyx4okw0jgnEsp8SWC98rTAB10aKMdaUdvfFUoKpqZKlwW8V14l/qfZqF1N\nXhwliV2vDTxOeHBzmhK4Gsi0CarmdUtEIKK8RFpnvqSt5HuKDPuFSjjB0lXn\n+v9XfGX4rMitPGBMkI3pc7YhjUYx26JL1fXi/e1nYte/vdlNPQErPec/LoNa\nG7Yn4/Vn5oS8YkPa+hxJgk0JrLthV6mXF5UTovFpxoa/7tPd4OBmf1luOa4O\nnLzwYK/l6NvqsXhq1Xmz6zAEXe5KKH3xlT1HP2DFEr0th9p2nmlsglnGeQFB\nUGv/JKn7DiIQhrNgGYYCuPYUFH3CWkDLufps7YgxbDqCp9w3ZKNH0PN9Fzhy\ny1qxGw/G622WwydyguK4O4FVg9OFEk+3wKtM0mTlKV6u+Kliy+usG/38ciyp\n9DAUoWqP9JpvYg/t02WxSNmkL/89BHlsnpzOySKNLAErX/jrVGHziM66HXZ2\n1jEAi0AsCOkVCW3YcIlyEnjuTIubDxJP/jK8QAxBk8+Usn/XgpLZcCQQWpg8\ny4nK\r\n=aMHx\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "assets/*.css",
    "dist",
    "es",
    "lib"
  ],
  "gitHead": "9c01d237310e1e0db98184a4ecc8cc7ed6963c1b",
  "homepage": "http://github.com/react-component/table",
  "keywords": [
    "react",
    "react-table",
    "table",
    "component",
    "ui"
  ],
  "license": "MIT",
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "yiminghe@gmail.com"
    },
    {
      "name": "afc163@gmail.com"
    }
  ],
  "module": "./es/index",
  "name": "rc-table",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^16.0.0",
    "react-dom": "^16.0.0"
  },
  "readme": "# rc-table\n\nReact table component.\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: http://img.shields.io/npm/v/rc-table.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-table\n[travis-image]: https://img.shields.io/travis/react-component/table.svg?style=flat-square\n[travis-url]: https://travis-ci.org/react-component/table\n[codecov-image]: https://img.shields.io/codecov/c/github/react-component/table/master.svg?style=flat-square\n[codecov-url]: https://codecov.io/gh/react-component/table/branch/master\n[download-image]: https://img.shields.io/npm/dm/rc-table.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-table\n\n## install\n\n[![rc-table](https://nodei.co/npm/rc-table.png)](https://npmjs.org/package/rc-table)\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## Example\n\nhttp://react-component.github.io/table/examples/\n\n## Usage\n\n```js\nimport Table from 'rc-table';\n\nconst columns = [{\n  title: 'Name', dataIndex: 'name', key:'name', width: 100,\n}, {\n  title: 'Age', dataIndex: 'age', key:'age', width: 100,\n}, {\n  title: 'Address', dataIndex: 'address', key:'address', width: 200,\n}, {\n  title: 'Operations', dataIndex: '', key:'operations', render: () => <a href=\"#\">Delete</a>,\n}];\n\nconst data = [\n  { name: 'Jack', age: 28, address: 'some where', key:'1' },\n  { name: 'Rose', age: 36, address: 'some where', key:'2' },\n];\n\nReact.render(<Table columns={columns} data={data} />, mountNode);\n```\n\n## API\n\n### Properties\n\n<table class=\"table table-bordered table-striped\">\n  <thead>\n    <tr>\n      <th style=\"width: 100px;\">Name</th>\n      <th style=\"width: 50px;\">Type</th>\n      <th>Default</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>tableLayout</td>\n      <td>'auto' | 'fixed'</td>\n      <td>'auto', 'fixed' for any columns is fixed or ellipsis or header is fixed</td>\n      <td>https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout</td>\n    </tr>\n    <tr>\n      <td>prefixCls</td>\n      <td>String</td>\n      <td>rc-table</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>className</td>\n      <td>String</td>\n      <td></td>\n      <td>additional className</td>\n    </tr>\n    <tr>\n      <td>id</td>\n      <td>String</td>\n      <td></td>\n      <td>identifier of the container div</td>\n    </tr>\n    <tr>\n      <td>useFixedHeader</td>\n      <td>Boolean</td>\n      <td>false</td>\n      <td>whether use separator table for header. better set width for columns</td>\n    </tr>\n    <tr>\n      <td>scroll</td>\n      <td>Object</td>\n      <td>{x: false, y: false}</td>\n      <td>whether table can be scroll in x/y direction, `x` or `y` can be a number that indicated the width and height of table body</td>\n    </tr>\n    <tr>\n      <td>expandIconAsCell</td>\n      <td>Boolean</td>\n      <td>false</td>\n      <td>whether render expandIcon as a cell</td>\n    </tr>\n    <tr>\n      <td>expandIconColumnIndex</td>\n      <td>Number</td>\n      <td>0</td>\n      <td>The index of expandIcon which column will be inserted when expandIconAsCell is false</td>\n    </tr>\n    <tr>\n      <td>rowKey</td>\n      <td>string or Function(record):string</td>\n      <td>'key'</td>\n      <td>\n        If rowKey is string, `record[rowKey]` will be used as key.\n        If rowKey is function, the return value of `rowKey(record)` will be use as key.\n      </td>\n    </tr>\n    <tr>\n      <td>rowClassName</td>\n      <td>string or Function(record, index, indent):string</td>\n      <td></td>\n      <td>get row's className</td>\n    </tr>\n    <tr>\n      <td>rowRef</td>\n      <td>Function(record, index, indent):string</td>\n      <td></td>\n      <td>get row's ref key</td>\n    </tr>\n    <tr>\n      <td>defaultExpandedRowKeys</td>\n      <td>String[]</td>\n      <td>[]</td>\n      <td>initial expanded rows keys</td>\n    </tr>\n    <tr>\n      <td>expandedRowKeys</td>\n      <td>String[]</td>\n      <td></td>\n      <td>current expanded rows keys</td>\n    </tr>\n    <tr>\n      <td>defaultExpandAllRows</td>\n      <td>Boolean</td>\n      <td>false</td>\n      <td>Expand All Rows initially</td>\n    </tr>\n    <tr>\n      <td>onExpandedRowsChange</td>\n      <td>Function(expandedRows)</td>\n      <td>save the expanded rows in the internal state</td>\n      <td>function to call when the expanded rows change</td>\n    </tr>\n    <tr>\n      <td>onExpand</td>\n      <td>Function(expanded, record)</td>\n      <td></td>\n      <td>function to call when click expand icon</td>\n    </tr>\n    <tr>\n      <td>expandedRowClassName</td>\n      <td>Function(recode, index, indent):string</td>\n      <td></td>\n      <td>get expanded row's className</td>\n    </tr>\n    <tr>\n      <td>expandedRowRender</td>\n      <td>Function(recode, index, indent, expanded):ReactNode</td>\n      <td></td>\n      <td>Content render to expanded row</td>\n    </tr>\n    <tr>\n      <td>data</td>\n      <td>Object[]</td>\n      <td></td>\n      <td>data record array to be rendered</td>\n    </tr>\n    <tr>\n      <td>indentSize</td>\n      <td>Number</td>\n      <td>15</td>\n      <td>indentSize for every level of data.i.children, better using with column.width specified</td>\n    </tr>\n    <tr>\n      <td>onRowClick[deprecated]</td>\n      <td>Function(record, index)</td>\n      <td></td>\n      <td>handle rowClick action, index means the index of current row among fatherElement[childrenColumnName]</td>\n    </tr>\n    <tr>\n      <td>onRowDoubleClick[deprecated]</td>\n      <td>Function(record, index)</td>\n      <td></td>\n      <td>handle rowDoubleClick action, index means the index of current row among fatherElement[childrenColumnName]</td>\n    </tr>\n    <tr>\n      <td>onRowMouseEnter[deprecated]</td>\n      <td>Function(record, index)</td>\n      <td></td>\n      <td>handle onRowMouseEnter action, index means the index of current row among fatherElement[childrenColumnName]</td>\n    </tr>\n    <tr>\n      <td>onRowMouseLeave[deprecated]</td>\n      <td>Function(record, index)</td>\n      <td></td>\n      <td>handle onRowMouseLeave action, index means the index of current row among fatherElement[childrenColumnName]</td>\n    </tr>\n    <tr>\n      <td>onRow</td>\n      <td>Function(record, index)</td>\n      <td></td>\n      <td>Set custom props per each row.</td>\n    </tr>\n    <tr>\n      <td>onHeaderRow</td>\n      <td>Function(record, index)</td>\n      <td></td>\n      <td>Set custom props per each header row.</td>\n    </tr>\n    <tr>\n      <td>showHeader</td>\n      <td>Boolean</td>\n      <td>true</td>\n      <td>whether table head is shown</td>\n    </tr>\n    <tr>\n      <td>title</td>\n      <td>Function(currentData)</td>\n      <td></td>\n      <td>table title render function</td>\n    </tr>\n    <tr>\n      <td>footer</td>\n      <td>Function(currentData)</td>\n      <td></td>\n      <td>table footer render function</td>\n    </tr>\n    <tr>\n      <td>getBodyWrapper[deprecated]</td>\n      <td>Function(body)</td>\n      <td></td>\n      <td>get wrapper of tbody, [demo](http://react-component.github.io/table/examples/animation.html)</td>\n    </tr>\n    <tr>\n      <td>emptyText</td>\n      <td>React.Node or Function</td>\n      <td>`No Data`</td>\n      <td>Display text when data is empty</td>\n    </tr>\n    <tr>\n      <td>columns</td>\n      <td>Object[]<Object></td>\n      <td></td>\n      <td>\n        The columns config of table, see table below\n      </td>\n    </tr>\n    <tr>\n      <td>components</td>\n      <td>Object</td>\n      <td></td>\n      <td>\n        Override table elements, see [#171](https://github.com/react-component/table/pull/171) for more details\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n## Column Props\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"width: 100px;\">Name</th>\n      <th style=\"width: 50px;\">Type</th>\n      <th>Default</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>key</td>\n      <td>String</td>\n      <td></td>\n      <td>key of this column</td>\n    </tr>\n    <tr>\n      <td>className</td>\n      <td>String</td>\n      <td></td>\n      <td>className of this column</td>\n    </tr>\n    <tr>\n      <td>colSpan</td>\n      <td>Number</td>\n      <td></td>\n      <td>thead colSpan of this column</td>\n    </tr>\n    <tr>\n      <td>title</td>\n      <td>React Node</td>\n      <td></td>\n      <td>title of this column</td>\n    </tr>\n    <tr>\n      <td>dataIndex</td>\n      <td>String</td>\n      <td></td>\n      <td>display field of the data record</td>\n    </tr>\n    <tr>\n      <td>width</td>\n      <td>String|Number</td>\n      <td></td>\n      <td>width of the specific proportion calculation according to the width of the columns</td>\n    </tr>\n    <tr>\n      <td>fixed</td>\n      <td>String|Boolean</td>\n      <td></td>\n      <td>this column will be fixed when table scroll horizontally: true or 'left' or 'right'</td>\n    </tr>\n    <tr>\n      <td>align</td>\n      <td>String</td>\n      <td></td>\n      <td>specify how cell content is aligned</td>\n    </tr>\n    <tr>\n      <td>ellipsis</td>\n      <td>Boolean</td>\n      <td></td>\n      <td>specify whether cell content be ellipsized</td>\n    </tr>\n    <tr>\n      <td>onCell</td>\n      <td>Function(record, index)</td>\n      <td></td>\n      <td>Set custom props per each cell.</td>\n    </tr>\n    <tr>\n      <td>onHeaderCell</td>\n      <td>Function(record)</td>\n      <td></td>\n      <td>Set custom props per each header cell.</td>\n    </tr>\n    <tr>\n      <td>render</td>\n      <td>Function(value, row, index)</td>\n      <td></td>\n      <td>The render function of cell, has three params: the text of this cell, the record of this row, the index of this row, it's return an object:{ children: value, props: { colSpan: 1, rowSpan:1 } } ==> 'children' is the text of this cell, props is some setting of this cell, eg: 'colspan' set td colspan, 'rowspan' set td rowspan</td>\n    </tr>\n    <tr>\n      <td>onCellClick[deprecated]</td>\n      <td>Function(row, event)</td>\n      <td></td>\n      <td>Called when column's cell is clicked</td>\n    </tr>\n  </tbody>\n</table>\n\n## License\n\nrc-table is released under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/react-component/table.git"
  },
  "scripts": {
    "build": "father doc build --storybook",
    "compile": "father build && lessc assets/index.less assets/index.css && lessc assets/animation.less assets/animation.css && lessc assets/bordered.less assets/bordered.css",
    "coverage": "father test --coverage",
    "gh-pages": "npm run build && father doc deploy",
    "lint": "eslint src/ --ext .ts,.tsx,.jsx,.js,.md",
    "postPublish": "npm run gh-pages",
    "prepublishOnly": "npm run compile && np --no-cleanup --yolo --no-publish --any-branch",
    "prettier": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "start": "cross-env NODE_ENV=development father doc dev --storybook",
    "test": "father test"
  },
  "version": "6.10.11"
}
