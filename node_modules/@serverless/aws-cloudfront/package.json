{
  "_args": [
    [
      {
        "raw": "@serverless/aws-cloudfront@^5.0.0",
        "scope": "@serverless",
        "escapedName": "@serverless%2faws-cloudfront",
        "name": "@serverless/aws-cloudfront",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/serverless-next.js"
    ]
  ],
  "_from": "@serverless/aws-cloudfront@^5.0.0",
  "_hasShrinkwrap": false,
  "_id": "@serverless/aws-cloudfront@5.0.0",
  "_location": "/@serverless/aws-cloudfront",
  "_nodeVersion": "12.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/aws-cloudfront_5.0.0_1569242894917_0.4410516016687218"
  },
  "_npmUser": {
    "name": "eahefnawy",
    "email": "eahefnawy@gmail.com"
  },
  "_npmVersion": "6.10.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@serverless/aws-cloudfront@^5.0.0",
    "scope": "@serverless",
    "escapedName": "@serverless%2faws-cloudfront",
    "name": "@serverless/aws-cloudfront",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/serverless-next.js"
  ],
  "_resolved": "https://registry.npmjs.org/@serverless/aws-cloudfront/-/aws-cloudfront-5.0.0.tgz",
  "_shasum": "ae319f8facbfa9b916f13daa212a601d1232e0d2",
  "_shrinkwrap": null,
  "_spec": "@serverless/aws-cloudfront@^5.0.0",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/serverless-next.js",
  "author": {
    "name": "Serverless, Inc."
  },
  "dependencies": {
    "@serverless/core": "^1.0.0",
    "aws-sdk": "^2.499.0",
    "ramda": "^0.26.1"
  },
  "description": "&nbsp;",
  "devDependencies": {
    "babel-eslint": "9.0.0",
    "eslint": "5.6.0",
    "eslint-config-prettier": "^3.6.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-prettier": "^3.0.1",
    "fs-extra": "^8.1.0",
    "jest": "^24.9.0",
    "prettier": "^1.15.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-a/Clfy3wN/euwDkxf/xMBQizaT67xMRb41Aktl0DF5W4FVbZz04gg+CdDG4aaY77vzeUWBysmIoVkAJ0QESzrQ==",
    "shasum": "ae319f8facbfa9b916f13daa212a601d1232e0d2",
    "tarball": "https://registry.npmjs.org/@serverless/aws-cloudfront/-/aws-cloudfront-5.0.0.tgz",
    "fileCount": 33,
    "unpackedSize": 84233,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdiL8PCRA9TVsSAnZWagAAHncP/3EMvrtr3GbLLy3jLRPy\nxMZag2A1qpWYgObcB79tYset1awKtacgpfmBIM7+R3zUbtruFzu6oveMmjA2\nYNEZWnBTt9ZeF9wmT1OSoLN34f/H3bIFSlDLbkQj76mGBMmGTFZIXloSOHyG\n2fqiT3ON4IzuRDEYJ83elndq19QF1kqiCrgMz8QyDdxuHUqlemEZomDlZwFA\nr79Dy1xj8+qJu16WTKcGdr+O/KDlRMBy0WgwM+vEX/yIz6uKt1eavUk8Shuz\n3jdpUBArICu6+Rh/QJDwgYn+PCpexeuokSE9rCrrJe7ba7trT18hcKniWddt\n1ewTFch9kJt2fXFlGI5Z3HBz+Sw4DSc+/llGZ8l1gNw88JyVM7g3JpfLhuY9\npDPrkiZjZE7BrKvdvZ2ggwb0zJ7biaCXhsKw2o2asUJv4/LHHH03f/qSHRNb\nlu7FYvS2taCmV5ub/8D80lCKpsVfFlvVa1vMq/aUQC8AR1ZyRtGpRGh9LoJK\nLBVHKoEgQx62ZU65fJ6R9vpL2emC0ZpiXfH8abT7KlRdWPDktkC3jIKjqf2b\nh8HB1+GM4b82qpHRzRC3yrPUKYjF4noMQH7iUHaHDQ9NKXcwVBvawKOp7e4W\nJ/JkP4wLkypPEwlP9ph2lF3KjzCV9seJyqd+NNa0Z3JrwUHSP/K982j6gRBE\niuWo\r\n=qnIE\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "913c4fdbc90c5c8041bafdedcb7e21acbf6b63c2",
  "license": "Apache",
  "main": "./serverless.js",
  "maintainers": [
    {
      "name": "ac360",
      "email": "austencollins@gmail.com"
    },
    {
      "name": "aj.stuyvenberg",
      "email": "astuyve@gmail.com"
    },
    {
      "name": "dschep",
      "email": "dschep@gmail.com"
    },
    {
      "name": "eahefnawy",
      "email": "eahefnawy@gmail.com"
    },
    {
      "name": "pmuens",
      "email": "raute1337@gmx.de"
    }
  ],
  "name": "@serverless/aws-cloudfront",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# aws-cloudfront\n\n&nbsp;\n\nDeploy an AWS CloudFront distribution for the provided origins using [Serverless Components](https://github.com/serverless/components).\n\n&nbsp;\n\n1. [Install](#1-install)\n2. [Create](#2-create)\n3. [Configure](#3-configure)\n4. [Deploy](#4-deploy)\n\n&nbsp;\n\n### 1. Install\n\n```console\n$ npm install -g serverless\n```\n\n### 2. Create\n\n```console\n$ mkdir cdn\n$ cd cdn\n```\n\nthe directory should look something like this:\n\n```\n|- serverless.yml\n|- .env      # your AWS api keys\n\n```\n\n```\n# .env\nAWS_ACCESS_KEY_ID=XXX\nAWS_SECRET_ACCESS_KEY=XXX\n```\n\n### 3. Configure\n\n```yml\n# serverless.yml\n\ndistribution:\n  component: '@serverless/aws-cloudfront'\n  inputs:\n    region: us-east-1\n    enabled: true # optional\n    defaults: # optional\n      ttl: 15\n      allowedHttpMethods: ['HEAD', 'GET']\n      forward: # optional\n        # array of header names, 'none' or 'all'\n        headers: ['Accept', 'Accept-Language']\n        # array of cookie names, 'none' or 'all'\n        cookies: ['my-cookie]\n        queryString: true\n        queryStringCacheKeys: ['queryKey']\n      viewerProtocolPolicy: 'https-only' # optional\n      smoothStreaming: true # optional\n      compress: true # optional\n      fieldLevelEncryptionId: '123' # optional\n      lambda@edge: # added to cloudfront default cache behavior\n        viewer-request: arn:aws:lambda:us-east-1:123:function:myFunc:version\n    origins:\n      - https://my-bucket.s3.amazonaws.com\n```\n\n#### Custom cache behavior\nCustom cache behaviors support the same config parameters as the default cache behavior (see the example above). \n```yml\n# serverless.yml\n\ndistribution:\n  component: '@serverless/aws-cloudfront'\n  inputs:\n    origins:\n      - url: https://my-assets.com\n        pathPatterns:\n          /static/images: # route any /static/images requests to https://my-assets.com\n            ttl: 10\n            allowedHttpMethods: ['GET', 'HEAD'] # optional\n            forward: # optional\n              headers: 'all' \n              cookies: ['auth-token']\n              queryString: true\n            compress: false # optional\n            # ...\n```\n\n#### Lambda@Edge\n\n```yml\n# serverless.yml\n\ndistribution:\n  component: '@serverless/aws-cloudfront'\n  inputs:\n    origins:\n      - url: https://sampleorigin.com\n        pathPatterns:\n          /sample/path:\n            ttl: 10\n            lambda@edge:\n              viewer-request: arn:aws:lambda:us-east-1:123:function:myFunc:version # lambda ARN including version\n```\n\n#### Private S3 Content\n\nTo restrict access to content that you serve from S3 you can mark as `private` your S3 origins:\n\n```yml\n# serverless.yml\n\ndistribution:\n  component: '@serverless/aws-cloudfront'\n  inputs:\n    origins:\n      - url: https://my-private-bucket.s3.amazonaws.com\n        private: true\n```\n\nA bucket policy will be added that grants CloudFront with access to the bucket objects. Note that it doesn't remove any existing permissions on the bucket. If users currently have permission to access the files in your bucket using Amazon S3 URLs you will need to manually remove those.\n\nThis is documented in more detail here: https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html\n\n### 4. Deploy\n\n```console\n$ serverless\n```\n\n&nbsp;\n\n### New to Components?\n\nCheckout the [Serverless Components](https://github.com/serverless/components) repo for more information.\n",
  "readmeFilename": "README.md",
  "scripts": {
    "lint": "eslint . --fix --cache",
    "test": "jest"
  },
  "version": "5.0.0"
}
