{
  "_args": [
    [
      {
        "raw": "s3-stream-upload@^2.0.2",
        "scope": null,
        "escapedName": "s3-stream-upload",
        "name": "s3-stream-upload",
        "rawSpec": "^2.0.2",
        "spec": ">=2.0.2 <3.0.0",
        "type": "range"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/@serverless/aws-lambda-layer/node_modules/@serverless/aws-s3"
    ]
  ],
  "_from": "s3-stream-upload@>=2.0.2 <3.0.0",
  "_id": "s3-stream-upload@2.0.2",
  "_inCache": true,
  "_location": "/s3-stream-upload",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/s3-stream-upload-2.0.2.tgz_1497924025848_0.6150702701415867"
  },
  "_npmUser": {
    "name": "jsantell",
    "email": "jsantell@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "s3-stream-upload@^2.0.2",
    "scope": null,
    "escapedName": "s3-stream-upload",
    "name": "s3-stream-upload",
    "rawSpec": "^2.0.2",
    "spec": ">=2.0.2 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@serverless/aws-lambda-layer/@serverless/aws-s3",
    "/@serverless/aws-lambda/@serverless/aws-s3",
    "/@serverless/aws-s3"
  ],
  "_resolved": "http://registry.npmjs.org/s3-stream-upload/-/s3-stream-upload-2.0.2.tgz",
  "_shasum": "60342f12d4aa06ea8f389fb761a5393aedca017f",
  "_shrinkwrap": null,
  "_spec": "s3-stream-upload@^2.0.2",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/@serverless/aws-lambda-layer/node_modules/@serverless/aws-s3",
  "author": {
    "name": "Jordan Santell",
    "url": "http://github.com/jsantell"
  },
  "bugs": {
    "url": "https://github.com/jsantell/s3-stream-upload/issues"
  },
  "dependencies": {
    "buffer-queue": "~1.0.0",
    "readable-stream": "^2.3.0"
  },
  "description": "A writable stream which uploads to Amazon S3 using the multipart file upload API.",
  "devDependencies": {
    "buffer-equal": "0.0.1",
    "chai": "1.9.1",
    "mocha": "1.18.2",
    "mock-s3": "~1.0.1",
    "stream-buffers": "^0.2.5",
    "when": "^3.2.3"
  },
  "directories": {},
  "dist": {
    "shasum": "60342f12d4aa06ea8f389fb761a5393aedca017f",
    "tarball": "https://registry.npmjs.org/s3-stream-upload/-/s3-stream-upload-2.0.2.tgz"
  },
  "engines": [
    "node >= 0.10.2"
  ],
  "gitHead": "b7f91edfd48f0d9eed596876e05748b47b4b2427",
  "homepage": "https://github.com/jsantell/s3-stream-upload#readme",
  "keywords": [
    "stream",
    "upload",
    "aws",
    "s3",
    "amazon"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "chriskinsman",
      "email": "chris@kinsman.net"
    },
    {
      "name": "jsantell",
      "email": "jsantell@gmail.com"
    }
  ],
  "name": "s3-stream-upload",
  "optionalDependencies": {},
  "readme": "# s3-stream-upload\n\n[![Build Status](http://img.shields.io/travis/jsantell/s3-stream-upload.svg?style=flat-square)](https://travis-ci.org/jsantell/s3-stream-upload)\n[![Build Status](http://img.shields.io/npm/v/s3-stream-upload.svg?style=flat-square)](https://www.npmjs.org/package/s3-stream-upload)\n\nA writable stream which uploads to Amazon S3 using the multipart file upload API.\n\nInspired by [s3-upload-stream](https://github.com/nathanpeck/s3-upload-stream).\n\n## Install\n\n```\nnpm install s3-stream-upload\n```\n\n## Usage\n\n```javascript\nvar UploadStream = require(\"s3-stream-upload\");\nvar S3 = require(\"aws-sdk\").S3;\n\nvar key = \"file.mp3\";\nvar s3 = new S3();\n\nfs.readFileStream(__dirname + \"/file.mp3\")\n  .pipe(UploadStream(s3, { Bucket: \"my-bucket\", Key: key }))\n  .on(\"error\", function (err) {\n    console.error(err);\n  })\n  .on(\"finish\", function () {\n    console.log(\"File uploaded!\");\n  });\n```\n\n## API\n\n### `UploadStream(s3, s3Config, config)`\n\n\nCreates and returns a [WritableStream](http://nodejs.org/api/stream.html#stream_class_stream_writable) for uploading to S3. Takes an S3 instance, and a `s3Config` object, which takes the same options as [S3.createMultipartUpload](http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/frames.html). Additional, non-S3 config options may be set on `config`, listed below:\n\n  * `concurrent` How many chunks can be sent to S3 concurrently. `1` by default.\n\n\n#### Events\n\n* `chunk-uploaded` - Emitted when a MPU chunk has been uploaded to S3, with the number of chunks uploaded at this point.\n* All [WritableStream](http://nodejs.org/api/stream.html#stream_class_stream_writable) events.\n\n#### Properties\n\n* `bytesWritten` - Like [fs.WriteStream](http://nodejs.org/api/fs.html#fs_class_fs_writestream), bytes uploaded to S3 currently.\n\n\n## Testing\n\nTo run unit tests, run:\n\n```\nnpm test\n```\n\n\n## License\n\nMIT License, Copyright (c) 2014 Jordan Santell\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/jsantell/s3-stream-upload.git"
  },
  "scripts": {
    "integration": "export NODE_ENV=test && ./node_modules/.bin/mocha --reporter spec --ui bdd --recursive --grep Integration",
    "test": "export NODE_ENV=test && ./node_modules/.bin/mocha --reporter spec --ui bdd --recursive --grep Unit"
  },
  "version": "2.0.2"
}
