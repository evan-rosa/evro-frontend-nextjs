{
  "_args": [
    [
      {
        "raw": "react-resize-detector@^4.2.1",
        "scope": null,
        "escapedName": "react-resize-detector",
        "name": "react-resize-detector",
        "rawSpec": "^4.2.1",
        "spec": ">=4.2.1 <5.0.0",
        "type": "range"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/recharts"
    ]
  ],
  "_from": "react-resize-detector@^4.2.1",
  "_hasShrinkwrap": false,
  "_id": "react-resize-detector@4.2.1",
  "_location": "/react-resize-detector",
  "_nodeVersion": "10.15.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-resize-detector_4.2.1_1568814874224_0.41025253032739695"
  },
  "_npmUser": {
    "name": "maslianok",
    "email": "maslianok@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-resize-detector@^4.2.1",
    "scope": null,
    "escapedName": "react-resize-detector",
    "name": "react-resize-detector",
    "rawSpec": "^4.2.1",
    "spec": ">=4.2.1 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/recharts"
  ],
  "_resolved": "https://registry.npmjs.org/react-resize-detector/-/react-resize-detector-4.2.1.tgz",
  "_shasum": "8982b74c3e1cf949afaa3c41050458c87b033982",
  "_shrinkwrap": null,
  "_spec": "react-resize-detector@^4.2.1",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/recharts",
  "author": {
    "name": "Vitalii Maslianok",
    "email": "maslianok@gmail.com",
    "url": "https://github.com/maslianok"
  },
  "bugs": {
    "url": "https://github.com/maslianok/react-resize-detector/issues"
  },
  "contributors": [
    {
      "name": "James J. Womack",
      "url": "@james_womack"
    },
    {
      "name": "Lam Hieu",
      "email": "lamhieu.vk@gmail.com",
      "url": "https://lamhieu.info"
    }
  ],
  "dependencies": {
    "lodash": "^4.17.15",
    "lodash-es": "^4.17.15",
    "prop-types": "^15.7.2",
    "raf-schd": "^4.0.2",
    "resize-observer-polyfill": "^1.5.1"
  },
  "description": "React resize detector",
  "devDependencies": {
    "@babel/cli": "^7.6.0",
    "@babel/core": "^7.6.0",
    "@babel/plugin-proposal-class-properties": "^7.5.5",
    "@babel/preset-env": "^7.6.0",
    "@babel/preset-react": "^7.0.0",
    "babel-eslint": "^10.0.3",
    "babel-plugin-module-resolver": "^3.2.0",
    "babel-plugin-transform-imports": "^2.0.0",
    "cross-env": "^6.0.0",
    "eslint": "^6.4.0",
    "eslint-config-airbnb": "^18.0.1",
    "eslint-plugin-import": "^2.18.2",
    "eslint-plugin-jsx-a11y": "^6.2.3",
    "eslint-plugin-react": "^7.14.3",
    "react": "^16.9.0",
    "react-dom": "^16.9.0",
    "rimraf": "^3.0.0"
  },
  "directories": {
    "example": "example"
  },
  "dist": {
    "integrity": "sha512-ZfPMBPxXi0o3xox42MIEtz84tPSVMW9GgwLHYvjVXlFM+OkNzbeEtpVSV+mSTJmk4Znwomolzt35zHN9LNBQMQ==",
    "shasum": "8982b74c3e1cf949afaa3c41050458c87b033982",
    "tarball": "https://registry.npmjs.org/react-resize-detector/-/react-resize-detector-4.2.1.tgz",
    "fileCount": 19,
    "unpackedSize": 207591,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdgjcaCRA9TVsSAnZWagAATFAP/R7W91EaCQCjcD7p+Go7\ncxrELdmhR7l1ImS7vzYq9kxe6kaQmCKIHcpg3lG1/4INErzYigeQXrYRoU0S\nRp84uBUDWlsYGqXUvGR86NqgaWKwAgWI10iTU7rP6pmpyth8pBUPZFI8YXqG\n7bRiXFB6ymyYInfT2rJcAsV5O4TyygvUq3TphwVnwwnGjir7UOBxWmzsqGeF\nRnV4RYPFZZgEv/FwoNoQLTduymozDNIcZxm6aypmCHi89e8tlWFbe+Ra8Fwa\ntgDKaOy9st95QvCDoCJ/N3aFCPEkVGZqaS7uhCtd+CnSFxvP9fHHn1fKmE5P\nsq+HxzhrNbwUIK3vn5Hn172gQXE8oF+QrcDiFHhXI0ufTM6fITXNf/uhT3WE\nlfyAyQi1UWC7M2ge3binfYgtA1N4guuM6QmJHdOEbRrjrTVACrUiZinHKIwO\n/HmKOhzoFMaP9qhJxtV7/kMk0oYdAusWId3Jx8ptvDB2Bt/sghxI/yU1Nt8k\nn0oON+ubjgj6X5UE1pr3RX5G5AeC71BHph4vUCneUrPV/6YC3/Jo1v2kicYq\n30U5Y6su6bJp1EwVvUxs0SVJC/4HJNTqLeUsfKCS8YS8OR/B+QYq4wT4Sz08\nOa0FTRBHZ7zUKmRB+KWuJskBgdHciAq1+bXfTdd975Y3aeiAFugJ0iTELFlO\n092Q\r\n=B3KM\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "1028efe74531239db7e2200ab1cc0d5ac7b82d19",
  "homepage": "https://github.com/maslianok/react-resize-detector",
  "keywords": [
    "react",
    "resize",
    "detector"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "maslianok",
      "email": "maslianok@gmail.com"
    }
  ],
  "module": "lib/esm/index.js",
  "name": "react-resize-detector",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^16.0.0",
    "react-dom": "^16.0.0"
  },
  "readme": "# Handle element resizes like it's 2019!\n\nNowadays browsers have started to support element resize handling natively using [ResizeObservers](https://wicg.github.io/ResizeObserver/). We use this feature (with a [polyfill](https://github.com/que-etc/resize-observer-polyfill)) to help you handle element resizes in React.\n\n## Demo\n\n#### [Live demo](http://maslianok.github.io/react-resize-detector/)\n\nLocal demo:\n\n```\ngit clone https://github.com/maslianok/react-resize-detector.git\ncd react-resize-detector/examples\nnpm i && npm start\n```\n\n## Installation\n\n```\nnpm i react-resize-detector\n// OR\nyarn add react-resize-detector\n```\n\n## Examples\n\n#### 1. Callback Pattern\n\n```jsx\nimport React, { PureComponent } from 'react';\nimport { render } from 'react-dom';\nimport ReactResizeDetector from 'react-resize-detector';\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <div>\n        ...\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} />\n      </div>\n    );\n  }\n\n  onResize = () => {\n    ...\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n```\n\n#### 2. Child Function Pattern\n\n```jsx\n<ReactResizeDetector handleWidth handleHeight>\n  {({ width, height }) => <div>{`${width}x${height}`}</div>}\n</ReactResizeDetector>\n```\n\n#### 3. Child Component Pattern\n\n```jsx\nconst CustomComponent = ({ width, height }) => <div>{`${width}x${height}`}</div>;\n\n// ...\n\n<ReactResizeDetector handleWidth handleHeight>\n  <CustomComponent />\n</ReactResizeDetector>;\n```\n\n#### 4. HOC pattern\n\n```jsx\nimport { withResizeDetector } from 'react-resize-detector';\n\nconst CustomComponent = ({ width, height }) => <div>{`${width}x${height}`}</div>;\n\nexport default withResizeDetector(CustomComponent);\n```\n\n#### 5. Render prop pattern\n\n```jsx\n<ResizeDetector\n  handleWidth\n  handleHeight\n  render={({ width, height }) => (\n    <div>\n      Width:{width}, Height:{height}\n    </div>\n  )}\n/>\n```\n\n## API\n\n| Prop           | Type        | Description                                                                                                                                                                                                                                                                                                              | Default     |\n| -------------- | ----------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----------- |\n| onResize       | Func        | Function that will be invoked with `width` and `height` arguments                                                                                                                                                                                                                                                        | `undefined` |\n| handleWidth    | Bool        | Trigger `onResize` on width change                                                                                                                                                                                                                                                                                       | `false`     |\n| handleHeight   | Bool        | Trigger `onResize` on height change                                                                                                                                                                                                                                                                                      | `false`     |\n| skipOnMount    | Bool        | Do not trigger onResize when a component mounts                                                                                                                                                                                                                                                                          | `false`     |\n| refreshMode    | String      | Possible values: `throttle` and `debounce` See [lodash docs](https://lodash.com/docs#debounce) for more information. `undefined` - callback will be fired for every frame                                                                                                                                                | `undefined` |\n| refreshRate    | Number      | Use this in conjunction with `refreshMode`. Important! It's a numeric prop so set it accordingly, e.g. `refreshRate={500}`                                                                                                                                                                                               | `1000`      |\n| refreshOptions | Object      | Use this in conjunction with `refreshMode`. An object in shape of `{ leading: bool, trailing: bool }`. Please refer to [lodash's docs](https://lodash.com/docs/4.17.11#throttle) for more info                                                                                                                           | `undefined` |\n| querySelector  | String      | A selector of an element to observe. You can use this property to attach resize-observer to any DOM element. Please refer to the [querySelector docs](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector)                                                                                           | `undefined` |\n| targetDomEl    | DOM element | A DOM element to observe. By default it's a parent element in relation to the ReactResizeDetector component. But you can pass any DOM element to observe. This property is omitted when you pass `querySelector`                                                                                                         | `undefined` |\n| nodeType       | node        | Valid only for a [callback-pattern](https://github.com/maslianok/react-resize-detector#1-callback-pattern). Ignored for other render types. Set resize-detector's node type. You can pass any valid React node: string with node's name or element. Can be useful when you need to handle table's or paragraph's resizes | `div`       |\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/maslianok/react-resize-detector.git"
  },
  "scripts": {
    "build": "npm run build:cjs && npm run build:esm",
    "build:cjs": "babel src --out-dir lib",
    "build:esm": "cross-env BABEL_ENV=esm babel src --out-dir lib/esm",
    "clean": "rimraf lib",
    "lint": "eslint -c .eslintrc src",
    "test": "npm run lint && npm run clean && npm run build"
  },
  "sideEffects": false,
  "version": "4.2.1"
}
