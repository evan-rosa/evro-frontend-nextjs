{
  "_args": [
    [
      {
        "raw": "d3-polygon@1",
        "scope": null,
        "escapedName": "d3-polygon",
        "name": "d3-polygon",
        "rawSpec": "1",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/d3"
    ]
  ],
  "_from": "d3-polygon@1",
  "_hasShrinkwrap": false,
  "_id": "d3-polygon@1.0.6",
  "_location": "/d3-polygon",
  "_nodeVersion": "10.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/d3-polygon_1.0.6_1573930679653_0.7085974651747406"
  },
  "_npmUser": {
    "name": "mbostock",
    "email": "mike@ocks.org"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "d3-polygon@1",
    "scope": null,
    "escapedName": "d3-polygon",
    "name": "d3-polygon",
    "rawSpec": "1",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/d3"
  ],
  "_resolved": "https://registry.npmjs.org/d3-polygon/-/d3-polygon-1.0.6.tgz",
  "_shasum": "0bf8cb8180a6dc107f518ddf7975e12abbfbd38e",
  "_shrinkwrap": null,
  "_spec": "d3-polygon@1",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/d3",
  "author": {
    "name": "Mike Bostock",
    "url": "http://bost.ocks.org/mike"
  },
  "bugs": {
    "url": "https://github.com/d3/d3-polygon/issues"
  },
  "dependencies": {},
  "description": "Operations for two-dimensional polygons.",
  "devDependencies": {
    "eslint": "6",
    "rollup": "1",
    "rollup-plugin-terser": "5",
    "tape": "4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-k+RF7WvI08PC8reEoXa/w2nSg5AUMTi+peBD9cmFc+0ixHfbs4QmxxkarVal1IkVkgxVuk9JSHhJURHiyHKAuQ==",
    "shasum": "0bf8cb8180a6dc107f518ddf7975e12abbfbd38e",
    "tarball": "https://registry.npmjs.org/d3-polygon/-/d3-polygon-1.0.6.tgz",
    "fileCount": 12,
    "unpackedSize": 15391,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd0Ea4CRA9TVsSAnZWagAAKeIQAKOKH32uK6ZpP9L78wIN\nQ3KpskMNjuju5DPxu+Pyb5QJk461qrsFDExKIXDPmZtAjKu5P4Hqlh9/MI6J\nfAz7w6BTVgPn8pGbyLV6Y5uLoQ9LFS2KHAJJpy0at0MxlFIIRMkhAPIOeAd6\nvLpx23VzWt8azrmIsP+06hR8Ud8Bq3sAZurZHw99YFazMkImKZTb0SJJDIfw\nkxVaQMEdaMMiIjlsmZBiHrW0wmNLSQJh1NNTwFAa2wtsHWZOvSDCZP23Av6X\nEG5JjOOOexMV5+gpKqXrXR2kv9V1ePs75fBimZIcjd7qd+cxAj/YNXBR8bPU\nOL7tFOt1gH7xU5m+NxWup1+Qu439nKk8OHKuQGk6nqcYmyr2I+Jroh0Q4ilz\ne4lND2MuQ1bNuDw04JeXClRuI1WTxOPHX241qIrsbvm1+6sD+IOL3A3jNOqz\n9TLt+srkoeU+d2pjmb162ob3FVSET9TXfxv+QBgimr46M638AusyvYj0xftm\n4u/VTW4Ny8lNLFABoIrq+V294VLebrUc3TKdeuOURIPqCEmzhekZvjV8Eyea\nXg9hlgnPDqCmEM/sSTLQcWGU9uteEl2h0XySb740ePLcfV7AL3giZF3sCC6b\nyih6YI6XI47eK0kpsOeBsYO819Ch6UYQJW49QtIYDtcQ2y71hcoLVo48B59h\nP9jY\r\n=g3x/\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "dist/**/*.js",
    "src/**/*.js"
  ],
  "gitHead": "8a6d0e2fdc68638d1525baa46a24fb769da19e5c",
  "homepage": "https://d3js.org/d3-polygon/",
  "jsdelivr": "dist/d3-polygon.min.js",
  "keywords": [
    "d3",
    "d3-module",
    "polygon",
    "hull",
    "geometry",
    "graphics"
  ],
  "license": "BSD-3-Clause",
  "main": "dist/d3-polygon.js",
  "maintainers": [
    {
      "name": "mbostock",
      "email": "mike@ocks.org"
    }
  ],
  "module": "src/index.js",
  "name": "d3-polygon",
  "optionalDependencies": {},
  "readme": "# d3-polygon\n\nThis module provides a few basic geometric operations for two-dimensional polygons. Each polygon is represented as an array of two-element arrays [​[<i>x1</i>, <i>y1</i>], [<i>x2</i>, <i>y2</i>], …], and may either be closed (wherein the first and last point are the same) or open (wherein they are not). Typically polygons are in counterclockwise order, assuming a coordinate system where the origin ⟨0,0⟩ is in the top-left corner.\n\n## Installing\n\nIf you use NPM, `npm install d3-polygon`. Otherwise, download the [latest release](https://github.com/d3/d3-polygon/releases/latest). You can also load directly from [d3js.org](https://d3js.org), either as a [standalone library](https://d3js.org/d3-polygon.v1.min.js) or as part of [D3](https://github.com/d3/d3). AMD, CommonJS, and vanilla environments are supported. In vanilla, a `d3` global is exported:\n\n```html\n<script src=\"https://d3js.org/d3-polygon.v1.min.js\"></script>\n<script>\n\nvar hull = d3.polygonHull(points);\n\n</script>\n```\n\n## API Reference\n\n<a href=\"#polygonArea\" name=\"polygonArea\">#</a> d3.<b>polygonArea</b>(<i>polygon</i>) [<>](https://github.com/d3/d3-polygon/blob/master/src/area.js#L1 \"Source Code\")\n\nReturns the signed area of the specified *polygon*. If the vertices of the polygon are in counterclockwise order (assuming a coordinate system where the origin ⟨0,0⟩ is in the top-left corner), the returned area is positive; otherwise it is negative, or zero.\n\n<a href=\"#polygonCentroid\" name=\"polygonCentroid\">#</a> d3.<b>polygonCentroid</b>(<i>polygon</i>) [<>](https://github.com/d3/d3-polygon/blob/master/src/centroid.js#L1 \"Source Code\")\n\nReturns the [centroid](https://en.wikipedia.org/wiki/Centroid) of the specified *polygon*.\n\n<a href=\"#polygonHull\" name=\"polygonHull\">#</a> d3.<b>polygonHull</b>(<i>points</i>) [<>](https://github.com/d3/d3-polygon/blob/master/src/hull.js#L23 \"Source Code\")\n\n<a href=\"http://bl.ocks.org/mbostock/6f14f7b7f267a85f7cdc\"><img src=\"https://raw.githubusercontent.com/d3/d3-polygon/master/img/hull.png\" width=\"250\" height=\"250\"></a>\n\nReturns the [convex hull](https://en.wikipedia.org/wiki/Convex_hull) of the specified *points* using [Andrew’s monotone chain algorithm](http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain). The returned hull is represented as an array containing a subset of the input *points* arranged in counterclockwise order. Returns null if *points* has fewer than three elements.\n\n<a href=\"#polygonContains\" name=\"polygonContains\">#</a> d3.<b>polygonContains</b>(<i>polygon</i>, <i>point</i>) [<>](https://github.com/d3/d3-polygon/blob/master/src/contains.js#L1 \"Source Code\")\n\nReturns true if and only if the specified *point* is inside the specified *polygon*.\n\n<a href=\"#polygonLength\" name=\"polygonLength\">#</a> d3.<b>polygonLength</b>(<i>polygon</i>) [<>](https://github.com/d3/d3-polygon/blob/master/src/length.js#L1 \"Source Code\")\n\nReturns the length of the perimeter of the specified *polygon*.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/d3/d3-polygon.git"
  },
  "scripts": {
    "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../${npm_package_name}/dist/${npm_package_name}.js ${npm_package_name}.v${npm_package_version%%.*}.js && cp ../${npm_package_name}/dist/${npm_package_name}.min.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git add ${npm_package_name}.v${npm_package_version%%.*}.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git commit -m \"${npm_package_name} ${npm_package_version}\" && git push && cd - && zip -j dist/${npm_package_name}.zip -- LICENSE README.md dist/${npm_package_name}.js dist/${npm_package_name}.min.js",
    "prepublishOnly": "rm -rf dist && yarn test",
    "pretest": "rollup -c",
    "test": "tape 'test/**/*-test.js' && eslint src test"
  },
  "sideEffects": false,
  "unpkg": "dist/d3-polygon.min.js",
  "version": "1.0.6"
}
