{
  "_args": [
    [
      {
        "raw": "d3-path@1",
        "scope": null,
        "escapedName": "d3-path",
        "name": "d3-path",
        "rawSpec": "1",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/d3-shape"
    ]
  ],
  "_from": "d3-path@1",
  "_hasShrinkwrap": false,
  "_id": "d3-path@1.0.9",
  "_location": "/d3-path",
  "_nodeVersion": "10.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/d3-path_1.0.9_1573930462916_0.360685867551217"
  },
  "_npmUser": {
    "name": "mbostock",
    "email": "mike@ocks.org"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "d3-path@1",
    "scope": null,
    "escapedName": "d3-path",
    "name": "d3-path",
    "rawSpec": "1",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/d3",
    "/d3-chord",
    "/d3-shape"
  ],
  "_resolved": "https://registry.npmjs.org/d3-path/-/d3-path-1.0.9.tgz",
  "_shasum": "48c050bb1fe8c262493a8caf5524e3e9591701cf",
  "_shrinkwrap": null,
  "_spec": "d3-path@1",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/d3-shape",
  "author": {
    "name": "Mike Bostock",
    "url": "http://bost.ocks.org/mike"
  },
  "bugs": {
    "url": "https://github.com/d3/d3-path/issues"
  },
  "dependencies": {},
  "description": "Serialize Canvas path commands to SVG.",
  "devDependencies": {
    "eslint": "6",
    "rollup": "1",
    "rollup-plugin-terser": "5",
    "tape": "4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-VLaYcn81dtHVTjEHd8B+pbe9yHWpXKZUC87PzoFmsFrJqgFwDe/qxfp5MlfsfM1V5E/iVt0MmEbWQ7FVIXh/bg==",
    "shasum": "48c050bb1fe8c262493a8caf5524e3e9591701cf",
    "tarball": "https://registry.npmjs.org/d3-path/-/d3-path-1.0.9.tgz",
    "fileCount": 7,
    "unpackedSize": 20235,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd0EXfCRA9TVsSAnZWagAAxqAP/i4OLxhrLb9Uat51O7+/\nQXCqbneWmwXjk+gGm997KK42HIZMZlgmOa/zKiC8fnKz+YUB59ozphrkzdCF\nJ0f/2BHHleEwWTMs2hhTl1GP73/OGh/nlL/Sss+LMH4mEw9eoXzB8MdvN1y1\n84xZY/j+QunbsNeFBqHkz+u4DN0z15LSstPzsVnjovu90S3S6rpkS9rQ9mVC\nu/v4+Ju4sbEHsfbeyNsfPYNuVgcHiMDsvS42EVNEpCuj7SH/RkfEvvFMUcpv\nef0O+u5eLUq6BkDhxoPUPF5XXCP+cf5j+IRwmnczXmBVKDltZ2OIpDFJyDHD\nVkdR+cKrcwyoc4wdgbW7Ii819hKjsj64cMnLp18LopkQ/S/Pd3CDQR9U3e7G\n1qPR5b04nFhmFQ76/wAtQJIBW6ZCPoC/jxlf1WMUwknpgQXtcwT3xhSoMtLI\ni2T8FygqkL0XQj85BcBWezj72IZD/Oxufh0Bog9931ZsjWI74M9Z9BvD35g1\na02YauWvA5V5HN2n/c103MlZG84fyq9OzDvGEL6RxgmckgA/FOa82uYBVzoj\npIuR7fuOkh7uEvqUkOHIJLZAkpZkPvEnokUbvm6qI5q8dXznReUxaAvJ0iX7\nxZyFgLUNdDcRC+nQedaaXN7hGe1LePGV9Dw8fjN7RLB0j9LsQn9zLSZbImoq\njF4f\r\n=P1vz\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "dist/**/*.js",
    "src/**/*.js"
  ],
  "gitHead": "151f962faa58f110993c6d71faefad57c174b66c",
  "homepage": "https://d3js.org/d3-path/",
  "jsdelivr": "dist/d3-path.min.js",
  "keywords": [
    "d3",
    "d3-module",
    "canvas",
    "path",
    "svg",
    "graphics",
    "CanvasRenderingContext2D",
    "CanvasPathMethods",
    "Path2D"
  ],
  "license": "BSD-3-Clause",
  "main": "dist/d3-path.js",
  "maintainers": [
    {
      "name": "mbostock",
      "email": "mike@ocks.org"
    }
  ],
  "module": "src/index.js",
  "name": "d3-path",
  "optionalDependencies": {},
  "readme": "# d3-path\n\nSay you have some code that draws to a 2D canvas:\n\n```js\nfunction drawCircle(context, radius) {\n  context.moveTo(radius, 0);\n  context.arc(0, 0, radius, 0, 2 * Math.PI);\n}\n```\n\nThe d3-path module lets you take this exact code and additionally render to [SVG](http://www.w3.org/TR/SVG/paths.html). It works by [serializing](#path_toString) [CanvasPathMethods](http://www.w3.org/TR/2dcontext/#canvaspathmethods) calls to [SVG path data](http://www.w3.org/TR/SVG/paths.html#PathData). For example:\n\n```js\nvar context = d3.path();\ndrawCircle(context, 40);\npathElement.setAttribute(\"d\", context.toString());\n```\n\nNow code you write once can be used with both Canvas (for performance) and SVG (for convenience). For a practical example, see [d3-shape](https://github.com/d3/d3-shape).\n\n## Installing\n\nIf you use NPM, `npm install d3-path`. Otherwise, download the [latest release](https://github.com/d3/d3-path/releases/latest). You can also load directly from [d3js.org](https://d3js.org), either as a [standalone library](https://d3js.org/d3-path.v1.min.js) or as part of [D3 4.0](https://github.com/d3/d3). AMD, CommonJS, and vanilla environments are supported. In vanilla, a `d3` global is exported:\n\n```html\n<script src=\"https://d3js.org/d3-path.v1.min.js\"></script>\n<script>\n\nvar path = d3.path();\npath.moveTo(1, 2);\npath.lineTo(3, 4);\npath.closePath();\n\n</script>\n```\n\n## API Reference\n\n<a name=\"path\" href=\"#path\">#</a> d3.<b>path</b>() · [Source](https://github.com/d3/d3-path/blob/master/src/path.js), [Examples](https://observablehq.com/@d3/d3-path)\n\nConstructs a new path serializer that implements [CanvasPathMethods](http://www.w3.org/TR/2dcontext/#canvaspathmethods).\n\n<a name=\"path_moveTo\" href=\"#path_moveTo\">#</a> <i>path</i>.<b>moveTo</b>(<i>x</i>, <i>y</i>)\n\nMove to the specified point ⟨*x*, *y*⟩. Equivalent to [*context*.moveTo](http://www.w3.org/TR/2dcontext/#dom-context-2d-moveto) and SVG’s [“moveto” command](http://www.w3.org/TR/SVG/paths.html#PathDataMovetoCommands).\n\n<a name=\"path_closePath\" href=\"#path_closePath\">#</A> <i>path</i>.<b>closePath</b>()\n\nEnds the current subpath and causes an automatic straight line to be drawn from the current point to the initial point of the current subpath. Equivalent to [*context*.closePath](http://www.w3.org/TR/2dcontext/#dom-context-2d-closepath) and SVG’s [“closepath” command](http://www.w3.org/TR/SVG/paths.html#PathDataClosePathCommand).\n\n<a name=\"path_lineTo\" href=\"#path_lineTo\">#</a> <i>path</i>.<b>lineTo</b>(<i>x</i>, <i>y</i>)\n\nDraws a straight line from the current point to the specified point ⟨*x*, *y*⟩. Equivalent to [*context*.lineTo](http://www.w3.org/TR/2dcontext/#dom-context-2d-lineto) and SVG’s [“lineto” command](http://www.w3.org/TR/SVG/paths.html#PathDataLinetoCommands).\n\n<a name=\"path_quadraticCurveTo\" href=\"#path_quadraticCurveTo\">#</a> <i>path</i>.<b>quadraticCurveTo</b>(<i>cpx</i>, <i>cpy</i>, <i>x</i>, <i>y</i>)\n\nDraws a quadratic Bézier segment from the current point to the specified point ⟨*x*, *y*⟩, with the specified control point ⟨*cpx*, *cpy*⟩. Equivalent to [*context*.quadraticCurveTo](http://www.w3.org/TR/2dcontext/#dom-context-2d-quadraticcurveto) and SVG’s [quadratic Bézier curve commands](http://www.w3.org/TR/SVG/paths.html#PathDataQuadraticBezierCommands).\n\n<a name=\"path_bezierCurveTo\" href=\"#path_bezierCurveTo\">#</a> <i>path</i>.<b>bezierCurveTo</b>(<i>cpx1</i>, <i>cpy1</i>, <i>cpx2</i>, <i>cpy2</i>, <i>x</i>, <i>y</i>)\n\nDraws a cubic Bézier segment from the current point to the specified point ⟨*x*, *y*⟩, with the specified control points ⟨*cpx1*, *cpy1*⟩ and ⟨*cpx2*, *cpy2*⟩. Equivalent to [*context*.bezierCurveTo](http://www.w3.org/TR/2dcontext/#dom-context-2d-beziercurveto) and SVG’s [cubic Bézier curve commands](http://www.w3.org/TR/SVG/paths.html#PathDataCubicBezierCommands).\n\n<a name=\"path_arcTo\" href=\"#path_arcTo\">#</a> <i>path</i>.<b>arcTo</b>(<i>x1</i>, <i>y1</i>, <i>x2</i>, <i>y2</i>, <i>radius</i>)\n\nDraws a circular arc segment with the specified *radius* that starts tangent to the line between the current point and the specified point ⟨*x1*, *y1*⟩ and ends tangent to the line between the specified points ⟨*x1*, *y1*⟩ and ⟨*x2*, *y2*⟩. If the first tangent point is not equal to the current point, a straight line is drawn between the current point and the first tangent point. Equivalent to [*context*.arcTo](http://www.w3.org/TR/2dcontext/#dom-context-2d-arcto) and uses SVG’s [elliptical arc curve commands](http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands).\n\n<a name=\"path_arc\" href=\"#path_arc\">#</a> <i>path</i>.<b>arc</b>(<i>x</i>, <i>y</i>, <i>radius</i>, <i>startAngle</i>, <i>endAngle</i>[, <i>anticlockwise</i>])\n\nDraws a circular arc segment with the specified center ⟨*x*, *y*⟩, *radius*, *startAngle* and *endAngle*. If *anticlockwise* is true, the arc is drawn in the anticlockwise direction; otherwise, it is drawn in the clockwise direction. If the current point is not equal to the starting point of the arc, a straight line is drawn from the current point to the start of the arc. Equivalent to [*context*.arc](http://www.w3.org/TR/2dcontext/#dom-context-2d-arc) and uses SVG’s [elliptical arc curve commands](http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands).\n\n<a name=\"path_rect\" href=\"#path_rect\">#</a> <i>path</i>.<b>rect</b>(<i>x</i>, <i>y</i>, <i>w</i>, <i>h</i>)\n\nCreates a new subpath containing just the four points ⟨*x*, *y*⟩, ⟨*x* + *w*, *y*⟩, ⟨*x* + *w*, *y* + *h*⟩, ⟨*x*, *y* + *h*⟩, with those four points connected by straight lines, and then marks the subpath as closed. Equivalent to [*context*.rect](http://www.w3.org/TR/2dcontext/#dom-context-2d-rect) and uses SVG’s [“lineto” commands](http://www.w3.org/TR/SVG/paths.html#PathDataLinetoCommands).\n\n<a name=\"path_toString\" href=\"#path_toString\">#</a> <i>path</i>.<b>toString</b>()\n\nReturns the string representation of this *path* according to SVG’s [path data specification](http://www.w3.org/TR/SVG/paths.html#PathData).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/d3/d3-path.git"
  },
  "scripts": {
    "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../${npm_package_name}/dist/${npm_package_name}.js ${npm_package_name}.v${npm_package_version%%.*}.js && cp ../${npm_package_name}/dist/${npm_package_name}.min.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git add ${npm_package_name}.v${npm_package_version%%.*}.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git commit -m \"${npm_package_name} ${npm_package_version}\" && git push && cd - && zip -j dist/${npm_package_name}.zip -- LICENSE README.md dist/${npm_package_name}.js dist/${npm_package_name}.min.js",
    "prepublishOnly": "rm -rf dist && yarn test",
    "pretest": "rollup -c",
    "test": "tape 'test/**/*-test.js' && eslint src test"
  },
  "sideEffects": false,
  "unpkg": "dist/d3-path.min.js",
  "version": "1.0.9"
}
