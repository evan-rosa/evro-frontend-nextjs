{
  "_args": [
    [
      {
        "raw": "d3-random@1",
        "scope": null,
        "escapedName": "d3-random",
        "name": "d3-random",
        "rawSpec": "1",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/d3"
    ]
  ],
  "_from": "d3-random@1",
  "_hasShrinkwrap": false,
  "_id": "d3-random@1.1.2",
  "_location": "/d3-random",
  "_nodeVersion": "10.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/d3-random_1.1.2_1535145549702_0.638740884929955"
  },
  "_npmUser": {
    "name": "mbostock",
    "email": "mike@ocks.org"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "d3-random@1",
    "scope": null,
    "escapedName": "d3-random",
    "name": "d3-random",
    "rawSpec": "1",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/d3"
  ],
  "_resolved": "https://registry.npmjs.org/d3-random/-/d3-random-1.1.2.tgz",
  "_shasum": "2833be7c124360bf9e2d3fd4f33847cfe6cab291",
  "_shrinkwrap": null,
  "_spec": "d3-random@1",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/d3",
  "author": {
    "name": "Mike Bostock",
    "url": "http://bost.ocks.org/mike"
  },
  "bugs": {
    "url": "https://github.com/d3/d3-random/issues"
  },
  "dependencies": {},
  "description": "Generate random numbers from various distributions.",
  "devDependencies": {
    "d3-array": "1",
    "eslint": "5",
    "rollup": "0.64",
    "rollup-plugin-terser": "1",
    "seedrandom": "2",
    "tape": "4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-6AK5BNpIFqP+cx/sreKzNjWbwZQCSUatxq+pPRmFIQaWuoD+NrbVWw7YWpHiXpCQ/NanKdtGDuB+VQcZDaEmYQ==",
    "shasum": "2833be7c124360bf9e2d3fd4f33847cfe6cab291",
    "tarball": "https://registry.npmjs.org/d3-random/-/d3-random-1.1.2.tgz",
    "fileCount": 16,
    "unpackedSize": 48396,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbgHZOCRA9TVsSAnZWagAAKwsP/368HnWRoEQGVCb1ocO+\nNxNX2r0Ya/y9wsYa6Wz12vFQwJpZ+LqZAvSXDZYWnksoE3Sj6QXyDv49jhsB\nOXraYtYjA+AzHTNUZebxR9rKe1AVvTKvCucOaNznWQhiaCsOgAbqiuaB1MPT\nBF7qkAA8/veuEIVSq5vLW8NKtPXk9C4Q2qRhhsNp48veO+LFZAAdPKfQGlCy\nUbPDx5svqNHWuKK8x3acu2XpiK9EKzwXGav66YZVcYluQP/EC/eb5DvfGjfI\na2pfH4QFzbLuKUx6ZIXdDXfAM6LsYcwOga3uWtcOVRazlmvEuyGcInsrnUgs\nnihshfXWo9M48UQ/bartWjGe6d15/geHHwiMW6h2dSFYRRQyIMJuoJ5PXUqL\nBjFE/qH7ddddSG8ZEZ474nzrR7s/avndB3YlHFhYOwfTvtAFlsWE3KO0/THy\n+XLQFeNk9VwlP9tTgXmgOBNV3QJ2DkZVs6ltAXTn0neja5yTGp0J8Wu2ywJa\nZWMs5qc9+EqhipjiVzCkq+/Gqyc4wqYinxqlhMHAw37BDhvJnkOP6nNJ2BEl\nAUbL2q0rMmO50cKTbIESP+/w1AqtUxj972rjJbkedEhmUq73Q13ZtGj2vDTg\niOTule83E0jjyQgvxVGL/xdN7DrKtTv8yE3EvwUmbXDe6QHAnDAhFwT8noQu\nj9PU\r\n=jha7\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "90d46bff55224c685b664a6ea4a06b6c2b832b58",
  "homepage": "https://d3js.org/d3-random/",
  "jsdelivr": "dist/d3-random.min.js",
  "keywords": [
    "d3",
    "d3-module",
    "random",
    "rng"
  ],
  "license": "BSD-3-Clause",
  "main": "dist/d3-random.js",
  "maintainers": [
    {
      "name": "mbostock",
      "email": "mike@ocks.org"
    }
  ],
  "module": "src/index.js",
  "name": "d3-random",
  "optionalDependencies": {},
  "readme": "# d3-random\n\nGenerate random numbers from various distributions.\n\n## Installing\n\nIf you use NPM, `npm install d3-random`. Otherwise, download the [latest release](https://github.com/d3/d3-random/releases/latest). You can also load directly from [d3js.org](https://d3js.org), either as a [standalone library](https://d3js.org/d3-random.v1.min.js) or as part of [D3 4.0](https://github.com/d3/d3). AMD, CommonJS, and vanilla environments are supported. In vanilla, a `d3` global is exported:\n\n```html\n<script src=\"https://d3js.org/d3-random.v1.min.js\"></script>\n<script>\n\nvar random = d3.randomUniform(1, 10);\n\n</script>\n```\n\n[Try d3-random in your browser.](https://runkit.com/npm/d3-random)\n\n## API Reference\n\n<a name=\"randomUniform\" href=\"#randomUniform\">#</a> d3.<b>randomUniform</b>([<i>min</i>, ][<i>max</i>]) [<>](https://github.com/d3/d3-random/blob/master/src/uniform.js \"Source\")\n\nReturns a function for generating random numbers with a [uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_\\(continuous\\)). The minimum allowed value of a returned number is *min*, and the maximum is *max*. If *min* is not specified, it defaults to 0; if *max* is not specified, it defaults to 1. For example:\n\n```js\nd3.randomUniform(6)(); // Returns a number greater than or equal to 0 and less than 6.\nd3.randomUniform(1, 5)(); // Returns a number greater than or equal to 1 and less than 5.\n```\n\nNote that you can also use the built-in [Math.random](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/random) to generate uniform distributions directly. For example, to generate a random integer between 0 and 99 (inclusive), you can say `Math.random() * 100 | 0`.\n\n<a name=\"randomNormal\" href=\"#randomNormal\">#</a> d3.<b>randomNormal</b>([<i>mu</i>][, <i>sigma</i>]) [<>](https://github.com/d3/d3-random/blob/master/src/normal.js \"Source\")\n\nReturns a function for generating random numbers with a [normal (Gaussian) distribution](https://en.wikipedia.org/wiki/Normal_distribution). The expected value of the generated numbers is *mu*, with the given standard deviation *sigma*. If *mu* is not specified, it defaults to 0; if *sigma* is not specified, it defaults to 1.\n\n<a name=\"randomLogNormal\" href=\"#randomLogNormal\">#</a> d3.<b>randomLogNormal</b>([<i>mu</i>][, <i>sigma</i>]) [<>](https://github.com/d3/d3-random/blob/master/src/logNormal.js \"Source\")\n\nReturns a function for generating random numbers with a [log-normal distribution](https://en.wikipedia.org/wiki/Log-normal_distribution). The expected value of the random variable’s natural logarithm is *mu*, with the given standard deviation *sigma*. If *mu* is not specified, it defaults to 0; if *sigma* is not specified, it defaults to 1.\n\n<a name=\"randomBates\" href=\"#randomBates\">#</a> d3.<b>randomBates</b>(<i>n</i>) [<>](https://github.com/d3/d3-random/blob/master/src/bates.js \"Source\")\n\nReturns a function for generating random numbers with a [Bates distribution](https://en.wikipedia.org/wiki/Bates_distribution) with *n* independent variables.\n\n<a name=\"randomIrwinHall\" href=\"#randomIrwinHall\">#</a> d3.<b>randomIrwinHall</b>(<i>n</i>) [<>](https://github.com/d3/d3-random/blob/master/src/irwinHall.js \"Source\")\n\nReturns a function for generating random numbers with an [Irwin–Hall distribution](https://en.wikipedia.org/wiki/Irwin–Hall_distribution) with *n* independent variables.\n\n<a name=\"randomExponential\" href=\"#randomExponential\">#</a> d3.<b>randomExponential</b>(<i>lambda</i>) [<>](https://github.com/d3/d3-random/blob/master/src/exponential.js \"Source\")\n\nReturns a function for generating random numbers with an [exponential distribution](https://en.wikipedia.org/wiki/Exponential_distribution) with the rate *lambda*; equivalent to time between events in a [Poisson process](https://en.wikipedia.org/wiki/Poisson_point_process) with a mean of 1 / *lambda*. For example, exponential(1/40) generates random times between events where, on average, one event occurs every 40 units of time.\n\n<a name=\"random_source\" href=\"#random_source\">#</a> <i>random</i>.<b>source</b>(<i>source</i>)\n\nReturns the same type of function for generating random numbers but where the given random number generator *source* is used as the source of randomness instead of Math.random. The given random number generator must implement the same interface as Math.random and only return values in the range [0, 1). This is useful when a seeded random number generator is preferable to Math.random. For example:\n\n```js\nvar d3 = require(\"d3-random\"),\n    seedrandom = require(\"seedrandom\"),\n    random = d3.randomNormal.source(seedrandom(\"a22ebc7c488a3a47\"))(0, 1);\n\nrandom(); // 0.9744193494813501\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/d3/d3-random.git"
  },
  "scripts": {
    "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../${npm_package_name}/dist/${npm_package_name}.js ${npm_package_name}.v${npm_package_version%%.*}.js && cp ../${npm_package_name}/dist/${npm_package_name}.min.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git add ${npm_package_name}.v${npm_package_version%%.*}.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git commit -m \"${npm_package_name} ${npm_package_version}\" && git push && cd - && zip -j dist/${npm_package_name}.zip -- LICENSE README.md dist/${npm_package_name}.js dist/${npm_package_name}.min.js",
    "prepublishOnly": "rm -rf dist && yarn test",
    "pretest": "rollup -c",
    "test": "tape 'test/**/*-test.js' && eslint src test"
  },
  "unpkg": "dist/d3-random.min.js",
  "version": "1.1.2"
}
