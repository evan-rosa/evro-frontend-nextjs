{
  "_args": [
    [
      {
        "raw": "serverless-next.js",
        "scope": null,
        "escapedName": "serverless-next.js",
        "name": "serverless-next.js",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend"
    ]
  ],
  "_from": "serverless-next.js",
  "_hasShrinkwrap": false,
  "_id": "serverless-next.js@1.8.0",
  "_location": "/serverless-next.js",
  "_nodeVersion": "11.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/serverless-next.js_1.8.0_1578163257196_0.31037978106879804"
  },
  "_npmUser": {
    "name": "danielconde",
    "email": "danielconde9@gmail.com"
  },
  "_npmVersion": "lerna/3.18.3/node@v11.12.0+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "serverless-next.js",
    "scope": null,
    "escapedName": "serverless-next.js",
    "name": "serverless-next.js",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/serverless-next.js/-/serverless-next.js-1.8.0.tgz",
  "_shasum": "1d388cba604220dbc7254eb63f61b64fdfa25099",
  "_shrinkwrap": null,
  "_spec": "serverless-next.js",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend",
  "author": {
    "name": "Daniel Conde Marin",
    "email": "danielconde9@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/danielcondemarin/serverless-nextjs-plugin/issues"
  },
  "dependencies": {
    "@serverless/aws-cloudfront": "^5.0.0",
    "@serverless/aws-lambda": "^3.0.0",
    "@serverless/aws-s3": "^4.2.0",
    "@serverless/core": "^1.0.0",
    "@serverless/domain": "^6.1.0",
    "execa": "^2.0.4",
    "fs-extra": "^8.1.0",
    "next-aws-lambda": "^2.3.2",
    "path-to-regexp": "^3.0.0"
  },
  "description": "Serverless nextjs powered by Serverless Components",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-wIM27QEBcqUdmsNZNKIV+66DndF5MqALva+5Zy4gl4s1etGji2Vre/mkP+AjqCQ7O/sYVOF5v2V1tHcLpP936A==",
    "shasum": "1d388cba604220dbc7254eb63f61b64fdfa25099",
    "tarball": "https://registry.npmjs.org/serverless-next.js/-/serverless-next.js-1.8.0.tgz",
    "fileCount": 111,
    "unpackedSize": 864173,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeENw5CRA9TVsSAnZWagAA52EP/2obSP/X87INfQ5HnJMJ\ntUoci3z1nYNUK3CgYDQWg/b+yptQijx0TFAVUg90W2eAwJoLl9lh7G50C5U9\nJ9yuwlBbN10xTmFgW87A0BRp1SyM6hk2rS1HjSs86TbptTBozqUD3/XoGzuq\nwaApcEKCDJIIkwQJLBODcz2w7MaB66YRmVYkZzXPAMnPoFuTxBCVySx+E/F7\nh8NqBRSZXsJqOyCmGblgsFuVTtdt/WTdrddwT4tr2qnZL/fr9bZ11l4UHHfC\n5W/Z4ZVqlvfBQECLUqX6KMXpvjb4C7/NU01yY3ADGFWgb1XnmirV9ryO4FW1\n72QBFuN7xIr1gZ3LaSQHP1MMoIF5SpRoH1t/VUYGPGnF/TfKD72yYrgmIP8Z\n27qiVVDY65tzp7bTrUrmKDQqedGXInNwSK6/YaIrOYbgSNE8+YhYbgwtvY0D\ndAV1Yf76SYbkC8rnzAS2k/+CLn12S78sBzA3ybed9zkBZj7TjD/V3OldgCjl\nUVg7uc5DklbZglwHSJnmc649N5fOK3U0uJNrkEJ3UlMNhsoNtJIcnWOZnFlJ\nTX0boaAdbhKodpWjQovtboCil40Q0AErnRefMv9ILats7uMH9g+x68E7tEIv\n6Qy4/jHjX/iSo2sEb6NgD0qZRbqXuhssb3769eKDerWP9zmmiZKKWPsm0MXe\n9ess\r\n=O/53\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=10.11.0"
  },
  "gitHead": "476e52987d0a8c67920be77487042d12fdd12124",
  "homepage": "https://github.com/danielcondemarin/serverless-nextjs-plugin#readme",
  "keywords": [
    "serverless",
    "component",
    "nextjs"
  ],
  "license": "ISC",
  "main": "serverless.js",
  "maintainers": [
    {
      "name": "danielconde",
      "email": "danielconde9@gmail.com"
    }
  ],
  "name": "serverless-next.js",
  "optionalDependencies": {},
  "readme": "# Serverless Nextjs Component\n\n![logo](./logo.gif)\n\nA zero configuration Nextjs 9.0 [serverless component](https://github.com/serverless-components/) with full feature parity.\n\n[![serverless](http://public.serverless.com/badges/v3.svg)](http://www.serverless.com)\n[![Build Status](https://travis-ci.org/danielcondemarin/serverless-next.js.svg?branch=master)](https://travis-ci.org/danielcondemarin/serverless-next.js)\n[![Financial Contributors on Open Collective](https://opencollective.com/serverless-nextjs-plugin/all/badge.svg?label=financial+contributors)](https://opencollective.com/serverless-nextjs-plugin) [![npm version](https://badge.fury.io/js/serverless-next.js.svg)](https://badge.fury.io/js/serverless-next.js)\n[![Coverage Status](https://coveralls.io/repos/github/danielcondemarin/serverless-next.js/badge.svg?branch=master)](https://coveralls.io/github/danielcondemarin/serverless-next.js?branch=master)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/c0d3aa2a86cb4ce98772a02015f46314)](https://www.codacy.com/app/danielcondemarin/serverless-nextjs-plugin?utm_source=github.com&utm_medium=referral&utm_content=danielcondemarin/serverless-nextjs-plugin&utm_campaign=Badge_Grade)\n\n## Contents\n\n- [Motivation](#motivation)\n- [Design principles](#design-principles)\n- [Features](#features)\n- [Getting started](#getting-started)\n- [Lambda@Edge configuration](#lambda-at-edge-configuration)\n- [Custom domain name](#custom-domain-name)\n- [AWS Permissions](#aws-permissions)\n- [Architecture](#architecture)\n- [Inputs](#inputs)\n- [FAQ](#faq)\n\n### Motivation\n\nSince Nextjs 8.0, [serverless mode](https://nextjs.org/blog/next-8#serverless-nextjs) was introduced which provides a new low level API which projects like this can use to deploy onto different cloud providers. This project is a better version of the [serverless plugin](https://github.com/danielcondemarin/serverless-next.js/tree/master/packages/serverless-nextjs-plugin) which focuses on addressing core issues like [next 9 support](https://github.com/danielcondemarin/serverless-nextjs-plugin/issues/101), [better development experience](https://github.com/danielcondemarin/serverless-nextjs-plugin/issues/59), [the 200 CloudFormation resource limit](https://github.com/danielcondemarin/serverless-nextjs-plugin/issues/17) and [performance](https://github.com/danielcondemarin/serverless-nextjs-plugin/issues/13).\n\n### Design principles\n\n1. Zero configuration by default\n\nThere is no configuration needed. You can extend defaults based on your application needs.\n\n2. Feature parity with nextjs\n\nUsers of this component should be able to use nextjs development tooling, aka `next dev`. It is the component's job to deploy your application ensuring parity with all of next's features we know and love.\n\n3. Fast deployments / no CloudFormation resource limits.\n\nWith a simplified architecture and no use of CloudFormation, there are no limits to how many pages you can have in your application, plus deployment times are very fast! with the exception of CloudFront propagation times of course.\n\n### Features\n\n- [x] [Server side rendered pages at the Edge](https://github.com/zeit/next.js#fetching-data-and-component-lifecycle).\n      Pages that need server side compute to render are hosted on Lambda@Edge. The component takes care of all the routing for you so there is no configuration needed. Because rendering happens at the CloudFront edge locations latency is very low!\n- [x] [API Routes](https://nextjs.org/docs#api-routes).\n      Similarly to the server side rendered pages, API requests are also served from the CloudFront edge locations using Lambda@Edge.\n- [x] [Dynamic pages / route segments](https://github.com/zeit/next.js/#dynamic-routing).\n- [x] [Automatic prerendering](https://github.com/zeit/next.js/#automatic-prerendering).\n      Statically optimised pages compiled by next are served from CloudFront edge locations with low latency and cost.\n- [x] [Client assets](https://github.com/zeit/next.js/#cdn-support-with-asset-prefix).\n      Nextjs build assets `/_next/*` served from CloudFront.\n- [x] [User static / public folders](https://github.com/zeit/next.js#static-file-serving-eg-images).\n      Any of your assets in the static or public folders are uploaded to S3 and served from CloudFront automatically.\n\n### Getting started\n\nInstall the next.js component:\n\n`npm install serverless-next.js --save-dev`\n\nAdd your next application to the serverless.yml:\n\n```yml\n# serverless.yml\n\nmyNextApplication:\n  component: serverless-next.js\n```\n\nSet your aws credentials in a `.env` file:\n\n```bash\nAWS_ACCESS_KEY_ID=accesskey\nAWS_SECRET_ACCESS_KEY=sshhh\n```\n\nSet next.js build target to `serverless`:\n\n```js\n// next.config.js\n\nmodule.exports = {\n  target: \"serverless\"\n};\n```\n\nAnd simply deploy:\n\n```bash\n$ serverless\n```\n\n### Custom domain name\n\nIn most cases you wouldn't want to use CloudFront's distribution domain to access your application. Instead, you can specify a custom domain name.\n\nMake sure you've purchased your `domain` within Route53:\n\n```yml\n# serverless.yml\n\nmyNextApplication:\n  component: serverless-next.js\n  inputs:\n    domain: \"example.com\" # sub-domain defaults to www\n```\n\nYou can also configure a `subdomain`:\n\n```yml\n# serverless.yml\n\nmyNextApplication:\n  component: serverless-next.js\n  inputs:\n    domain: [\"sub\", \"example.com\"] # [ sub-domain, domain ]\n```\n\n### AWS Permissions\n\nBy default the Lambda@Edge functions run using AWSLambdaBasicExecutionRole which only allows uploading logs to CloudWatch. If you need permissions beyond this, like for example access to DynamoDB or any other AWS resource you will need your own custom policy arn:\n\n```yml\n# serverless.yml\n\nmyNextApplication:\n  component: serverless-next.js\n  inputs:\n    policy: \"arn:aws:iam::123456789012:policy/MyCustomPolicy\"\n```\n\nMake sure you add CloudWatch log permissions to your custom policy.\n\n### Lambda At Edge Configuration\n\nBoth **default** and **api** edge lambdas will be assigned 512mb of memory by default. This value can be altered by assigning a number to the `memory` input\n\n```yml\n# serverless.yml\n\nmyNextApplication:\n  component: serverless-next.js\n  inputs:\n    memory: 1024\n```\n\nValues for **default** and **api** lambdas can be separately defined by assigning `memory` to an object like so:\n\n```yml\n# serverless.yml\n\nmyNextApplication:\n  component: serverless-next.js\n  inputs:\n    memory:\n      defaultLambda: 1024\n      apiLambda: 2048\n```\n\nSimilarly, the timeout by default is 10 seconds. To customise you can:\n\n```yml\n# serverless.yml\n\nmyNextApplication:\n  component: serverless-next.js\n  inputs:\n    timeout:\n      defaultLambda: 20\n      apiLambda: 15\n```\n\nNote the maximum timeout allowed for Lambda@Edge is 30 seconds. See https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-requirements-limits.html\n\n### Architecture\n\n![architecture](./arch_no_grid.png)\n\nFour Cache Behaviours are created in CloudFront.\n\nThe first two `_next/*` and `static/*` forward the requests to S3.\n\nThe third is associated to a lambda function which is responsible for handling three types of requests.\n\n1. Server side rendered page. Any page that defines `getInitialProps` method will be rendered at this level and the response is returned immediately to the user.\n\n2. Statically optimised page. Requests to pages that were pre-compiled by next to HTML are forwarded to S3.\n\n3. Public resources. Requests to root level resources like `/robots.txt`, `/favicon.ico`, `/manifest.json`, etc. These are forwarded to S3.\n\nThe reason why 2. and 3. have to go through Lambda@Edge first is because the routes don't conform to a pattern like `_next/*` or `static/*`. Also, one cache behaviour per route is a bad idea because CloudFront only allows [25 per distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-web-distributions).\n\nThe fourth cache behaviour handles next API requests `api/*`.\n\n### Inputs\n\n| Name          | Type              | Default Value            | Description                                                                                                                                                                                                                                                          |\n| ------------- | ----------------- | ------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| domain        | `Array`           | `null`                   | For example `['admin', 'portal.com']`                                                                                                                                                                                                                                |\n| bucketName    | `string`          | `null`                   | Custom bucket name where static assets are stored. By default is autogenerated.                                                                                                                                                                                      |\n| nextConfigDir | `string`          | `./`                     | Directory where your application `next.config.js` file is. This input is useful when the `serverless.yml` is not in the same directory as the next app. <br>**Note:** `nextConfigDir` should be set if `next.config.js` `distDir` is used                            |\n| nextStaticDir | `string`          | `./`                     | If your `static` or `public` directory is not a direct child of `nextConfigDir` this is needed                                                                                                                                                                       |\n| memory        | `number\\|object`  | `512`                    | When assigned a number, both the default and api lambdas will assigned memory of that value. When assigned to an object, values for the default and api lambdas can be separately defined                                                                            |  |\n| timeout       | `number\\|object`  | `10`                     | Same as above                                                                                                                                                                                                                                                        |\n| build         | `boolean\\|object` | `true`                   | When true builds and deploys app, when false assume the app has been built and uses the `.next` `.serverless_nextjs` directories in `nextConfigDir` to deploy. If an object is passed `build` allows for overriding what script gets called and with what arguments. |\n| build.cmd     | `string`          | `node_modules/.bin/next` | Build command                                                                                                                                                                                                                                                        |\n| build.args    | `Array\\|string`   | `['build']`              | Arguments to pass to the build                                                                                                                                                                                                                                       |\n| build.cwd     | `string`          | `./`                     | Override the current working directory                                                                                                                                                                                                                               |\n| build.enabled | `boolean`         | `true`                   | Same as passing `build:false` but from within the config                                                                                                                                                                                                             |\n| build.env     | `object`          | `{}`                     | Add additional environment variables to the script                                                                                                                                                                                                                   |\n\nCustom inputs can be configured like this:\n\n```yaml\nmyNextApp:\n  component: serverless-next.js\n  inputs:\n    bucketName: my-bucket\n```\n\n### FAQ\n\n#### My component doesn't deploy\n\nMake sure your `serverless.yml` uses the `serverless-components` format. [serverless components](https://serverless.com/blog/what-are-serverless-components-how-use/) differ from the original serverless framework, even though they are both accessible via the same CLI.\n\n✅ **Do**\n\n```yml\n# serverless.yml\nmyNextApp:\n  component: serverless-next.js\n\nmyTable:\n  component: serverless/aws-dynamodb\n  inputs:\n    name: Customers\n# other components\n```\n\n❌ **Don't**\n\n```yml\n# serverless.yml\nprovider:\n  name: aws\n  runtime: nodejs10.x\n  region: eu-west-1\n\nmyNextApp:\n  component: serverless-next.js\n\nResources: ...\n```\n\nNote how the correct yaml doesn't declare a `provider`, `Resources`, etc.\n\nFor deploying, don't run `serverless deploy`. Simply run `serverless` and that deploys your components declared in the `serverless.yml` file.\n\nFor more information about serverless components go [here](https://serverless.com/blog/what-are-serverless-components-how-use/).\n\n#### Should I use the [serverless-nextjs-plugin](https://github.com/danielcondemarin/serverless-nextjs-plugin/tree/master/packages/serverless-nextjs-plugin) or this component?\n\nUsers are encouraged to use this component instead of the `serverless-nextjs-plugin`. This component was built and designed using lessons learned from the serverless plugin.\n\n#### How do I interact with other AWS Services within my app?\n\nSee `examples/dynamodb-crud` for an example Todo application that interacts with DynamoDB.\n\n#### [CI/CD] A new CloudFront distribution is created on every CI build. I wasn't expecting that\n\nYou need to commit your application state in source control. That is the files under the `.serverless` directory.\nThe serverless team is currently working on remote state storage so this won't be necessary in the future.\n\n#### My lambda is deployed to `us-east-1`. How can I deploy it to another region?\n\nServerless next.js is _regionless_. By design, `serverless-next.js` applications will be deployed across the globe to every CloudFront edge location. The lambda might look like is only deployed to `us-east-1` but behind the scenes, it is replicated to every other region.\n\n#### I require passing additional information into my build\n\nSee the sample below for an advanced `build` setup that includes passing additional arguments and environment variables to the build.\n\n```yml\n# serverless.yml\nmyDatabase:\n  component: MY_DATABASE_COMPNENT\nmyNextApp:\n  component: serverless-next.js\n  build:\n    args: [\"build\", \"custom/path/to/pages\"]\n    env:\n      DATABASE_URL: ${myDatabase.databaseUrl}\n```\n\n## Contributing\n\nPlease see the [contributing](./CONTRIBUTING.md) guide.\n\n## Contributors\n\n### Code Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/danielcondemarin/serverless-nextjs-plugin/graphs/contributors\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/contributors.svg?width=890&button=false\" /></a>\n\n### Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/serverless-nextjs-plugin/contribute)]\n\n#### Individuals\n\n<a href=\"https://opencollective.com/serverless-nextjs-plugin\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/individuals.svg?width=890\"></a>\n\n#### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/serverless-nextjs-plugin/contribute)]\n\n<a href=\"https://opencollective.com/serverless-nextjs-plugin/organization/0/website\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/organization/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/serverless-nextjs-plugin/organization/1/website\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/organization/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/serverless-nextjs-plugin/organization/2/website\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/organization/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/serverless-nextjs-plugin/organization/3/website\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/organization/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/serverless-nextjs-plugin/organization/4/website\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/organization/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/serverless-nextjs-plugin/organization/5/website\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/organization/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/serverless-nextjs-plugin/organization/6/website\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/organization/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/serverless-nextjs-plugin/organization/7/website\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/organization/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/serverless-nextjs-plugin/organization/8/website\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/organization/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/serverless-nextjs-plugin/organization/9/website\"><img src=\"https://opencollective.com/serverless-nextjs-plugin/organization/9/avatar.svg\"></a>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/danielcondemarin/serverless-nextjs-plugin.git"
  },
  "version": "1.8.0"
}
