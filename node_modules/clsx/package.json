{
  "_args": [
    [
      {
        "raw": "clsx@^1.0.2",
        "scope": null,
        "escapedName": "clsx",
        "name": "clsx",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/material-ui-pickers"
    ]
  ],
  "_from": "clsx@^1.0.2",
  "_hasShrinkwrap": false,
  "_id": "clsx@1.0.4",
  "_location": "/clsx",
  "_nodeVersion": "10.13.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/clsx_1.0.4_1554593256243_0.753768951141554"
  },
  "_npmUser": {
    "name": "lukeed",
    "email": "luke@lukeed.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "clsx@^1.0.2",
    "scope": null,
    "escapedName": "clsx",
    "name": "clsx",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/material-ui-pickers"
  ],
  "_resolved": "https://registry.npmjs.org/clsx/-/clsx-1.0.4.tgz",
  "_shasum": "0c0171f6d5cb2fe83848463c15fcc26b4df8c2ec",
  "_shrinkwrap": null,
  "_spec": "clsx@^1.0.2",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/material-ui-pickers",
  "author": {
    "name": "Luke Edwards",
    "email": "luke.edwards05@gmail.com",
    "url": "lukeed.com"
  },
  "bugs": {
    "url": "https://github.com/lukeed/clsx/issues"
  },
  "dependencies": {},
  "description": "A tiny (223B) utility for constructing className strings conditionally.",
  "devDependencies": {
    "bundt": "^0.1.1",
    "tap-spec": "^5.0.0",
    "tape": "^4.9.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-1mQ557MIZTrL/140j+JVdRM6e31/OA4vTYxXgqIIZlndyfjHpyawKZia1Im05Vp9BWmImkcNrNtFYQMyFcgJDg==",
    "shasum": "0c0171f6d5cb2fe83848463c15fcc26b4df8c2ec",
    "tarball": "https://registry.npmjs.org/clsx/-/clsx-1.0.4.tgz",
    "fileCount": 7,
    "unpackedSize": 5782,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcqTXpCRA9TVsSAnZWagAAUHEP+wRQmqZgdvxaUngkC89L\nFnWduOsuM0aWbiejCsYzdgoz0ytvwtU2S4/8+A+6IGptyGaOQ8Wnhoc4mdE2\nDTnqgO4MfITwDxa4/w0dWqNW83h0srexjdYuJWfmrGoSuz2zPi4pVTUUJYna\nPTFuHDjUnXwwqGdZ434AZpzmpMuYS9e7YhnyZbgSQgsRbrVHi3g2MbMxPKBQ\n4e0BZ7laKB66Tkm3JERKHnBt3FreJiS7pwNb5mnj0nAASXTCe6E14LGel8sU\nMhTDpT1Xco0eFrVgJArkFgR4NBBxAV/IS1VAYplIdIXc7Tey6vU+4Xk4GnG2\nnnVZEXGh72SGhE9JQV7GeqhHIK+Cj2XMXiGhYILpdSwAIGywraC2ie7YxyaO\nSZMn1MRHuDrkogKbIY2oc3JJ0g1fy5B8NEPoRQ+IKrxmMGeiK7wiURqT+AWB\nP333txunEA7kSx1s37ynawSo41wnpQYdaqXNeSFMQaxkIRuAaktCCD/NcvBn\nGmvMblfZ7DzMfi+KPNOIppVhD1eO5Br4mVS13rrAVjgaQCzkGuAU/P1Ioedr\njaiHAwYc9CQMX6AkmraYs4OhY40RLBOUSIz7N4BD6KL0i8POmSy4crvVm/GT\nFRzEpDvywfhYsan7xAD/VfZU9zF9dANp45meiwtTf6HWivZ7V0aFJXUkdYQs\n4RDj\r\n=OuJ+\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "*.d.ts",
    "dist"
  ],
  "gitHead": "af19571baaf00d73c8e7600cc0f0ede163b45bca",
  "homepage": "https://github.com/lukeed/clsx#readme",
  "keywords": [
    "classes",
    "classname",
    "classnames"
  ],
  "license": "MIT",
  "main": "dist/clsx.js",
  "maintainers": [
    {
      "name": "lukeed",
      "email": "luke@lukeed.com"
    }
  ],
  "module": "dist/clsx.m.js",
  "name": "clsx",
  "optionalDependencies": {},
  "readme": "# clsx [![Build Status](https://travis-ci.org/lukeed/clsx.svg?branch=master)](https://travis-ci.org/lukeed/clsx)\n\n> A tiny (223B) utility for constructing `className` strings conditionally.<Br>Also serves as a [faster](/bench) & smaller drop-in replacement for the `classnames` module.\n\nThis module is available in three formats:\n\n* **ES Module**: `dist/clsx.m.js`\n* **CommonJS**: `dist/clsx.js`\n* **UMD**: `dist/clsx.min.js`\n\n\n## Install\n\n```\n$ npm install --save clsx\n```\n\n\n## Usage\n\n```js\nimport clsx from 'clsx';\n\n// Strings (variadic)\nclsx('foo', true && 'bar', 'baz');\n//=> 'foo bar baz'\n\n// Objects\nclsx({ foo:true, bar:false, baz:isTrue() });\n//=> 'foo baz'\n\n// Objects (variadic)\nclsx({ foo:true }, { bar:false }, null, { '--foobar':'hello' });\n//=> 'foo --foobar'\n\n// Arrays\nclsx(['foo', 0, false, 'bar']);\n//=> 'foo bar'\n\n// Arrays (variadic)\nclsx(['foo'], ['', 0, false, 'bar'], [['baz', [['hello'], 'there']]]);\n//=> 'foo bar baz hello there'\n\n// Kitchen sink (with nesting)\nclsx('foo', [1 && 'bar', { baz:false, bat:null }, ['hello', ['world']]], 'cya');\n//=> 'foo bar hello world cya'\n```\n\n\n## API\n\n### clsx(...input)\nReturns: `String`\n\n#### input\nType: `Mixed`\n\nThe `clsx` function can take ***any*** number of arguments, each of which can be an Object, Array, Boolean, or String.\n\n> **Important:** _Any_ falsey values are discarded!<br>Standalone Boolean values are discarded as well.\n\n```js\nclsx(true, false, '', null, undefined, 0, NaN);\n//=> ''\n```\n\n## Benchmarks\n\nFor snapshots of cross-browser results, check out the [`bench`](/bench) directory~!\n\n\n## Related\n\n- [obj-str](https://github.com/lukeed/obj-str) - Similar utility that is faster and smaller (96B) but only works with Objects.\n\n## License\n\nMIT Â© [Luke Edwards](https://lukeed.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lukeed/clsx.git"
  },
  "scripts": {
    "build": "bundt",
    "pretest": "npm run build",
    "test": "tape test/*.js | tap-spec"
  },
  "types": "clsx.d.ts",
  "unpkg": "dist/clsx.min.js",
  "version": "1.0.4"
}
