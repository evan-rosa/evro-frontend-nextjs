{
  "_args": [
    [
      {
        "raw": "devalue@2.0.1",
        "scope": null,
        "escapedName": "devalue",
        "name": "devalue",
        "rawSpec": "2.0.1",
        "spec": "2.0.1",
        "type": "version"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/next"
    ]
  ],
  "_from": "devalue@2.0.1",
  "_hasShrinkwrap": false,
  "_id": "devalue@2.0.1",
  "_location": "/devalue",
  "_nodeVersion": "12.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/devalue_2.0.1_1575051382018_0.6571563648061147"
  },
  "_npmUser": {
    "name": "rich_harris",
    "email": "richard.a.harris@gmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "devalue@2.0.1",
    "scope": null,
    "escapedName": "devalue",
    "name": "devalue",
    "rawSpec": "2.0.1",
    "spec": "2.0.1",
    "type": "version"
  },
  "_requiredBy": [
    "/next"
  ],
  "_resolved": "https://registry.npmjs.org/devalue/-/devalue-2.0.1.tgz",
  "_shasum": "5d368f9adc0928e47b77eea53ca60d2f346f9762",
  "_shrinkwrap": null,
  "_spec": "devalue@2.0.1",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/next",
  "bugs": {
    "url": "https://github.com/Rich-Harris/devalue/issues"
  },
  "dependencies": {},
  "description": "Gets the job done when JSON.stringify can't",
  "devDependencies": {
    "@types/mocha": "^5.2.5",
    "@types/node": "^10.12.0",
    "glob": "^7.1.2",
    "mocha": "^5.2.0",
    "rollup": "^0.66.6",
    "rollup-plugin-typescript": "^1.0.0",
    "rollup-plugin-virtual": "^1.0.1",
    "sander": "^0.6.0",
    "ts-node": "^7.0.1",
    "tslib": "^1.9.3",
    "typescript": "^3.1.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-I2TiqT5iWBEyB8GRfTDP0hiLZ0YeDJZ+upDxjBfOC2lebO5LezQMv7QvIUTzdb64jQyAKLf1AHADtGN+jw6v8Q==",
    "shasum": "5d368f9adc0928e47b77eea53ca60d2f346f9762",
    "tarball": "https://registry.npmjs.org/devalue/-/devalue-2.0.1.tgz",
    "fileCount": 7,
    "unpackedSize": 23482,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd4WB2CRA9TVsSAnZWagAAJ1QP/RF/LT+Rg06xqIPM03AK\n9/NOzmd6sWbKpPNUkM1UGT+qyNpSyeUHUIpKKuQn4EWrT3wU8uhsQZXGfjiF\nbVuSjW7cISKO0iDl8xeWqh2WHLtOesF/EoTljuO/UqCmHh6Xwtu7q7mn/2sB\nRyly9rObs/XlGOB1YslNetKIJ4e3lhJwuQy8TghnY6BgyCBaJwZP4ALDj81Q\nHiPFCeJhSjnJQPQL9lDDskVmxm5BniPFi0bwF+r9lTn3eEq9I/foO+OOjp/H\nd1QGYXL3hTXbp8J//Ynzb9EI4KuyMqjcAqHbBsUSlBMNr/boi2boR6gnGJPl\nuM/J5rUGBLaT7QrxqGkuxl7OleRDEgmoOQ/n8PvA86qjsBl033wshRk1YdpW\nLjk0Lr1MpWoQy25thzypqx9W+FM1Be9hSDc6FYJJC415ib9jBCfuUC7ubb8L\nPDvIKQ9w9+Ywacp1tMkJlmJ1M8uYoOTdndFhVoqDKUAcFOz+tgZz5qN61kor\nYOBeaGV7ewCufjkDaNxU4OWJm+/AuCrna9X7huhiriJcpeOla99p8mVTI5Jv\nBHyeVJU6n/R9bLdg/HMwurn72oXeR8QMJUhIGZBFFmTK4om5sPsPUkLVMVdV\nE2HIXcs3t00UN7DBCX/2CVh+/gZkhAF1m7Pf3tyAk9glmPIBsa6+kvGPgkXT\nD25V\r\n=MhD9\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "dist",
    "types"
  ],
  "gitHead": "0debc411fef5028abfac1d40b7553c0bde089c5f",
  "homepage": "https://github.com/Rich-Harris/devalue#readme",
  "license": "MIT",
  "main": "dist/devalue.umd.js",
  "maintainers": [
    {
      "name": "rich_harris",
      "email": "richard.a.harris@gmail.com"
    }
  ],
  "module": "dist/devalue.esm.js",
  "name": "devalue",
  "optionalDependencies": {},
  "readme": "# devalue\n\nLike `JSON.stringify`, but handles\n\n* cyclical references (`obj.self = obj`)\n* repeated references (`[value, value]`)\n* `undefined`, `Infinity`, `NaN`, `-0`\n* regular expressions\n* dates\n* `Map` and `Set`\n\nTry it out on [runkit.com](https://npm.runkit.com/devalue).\n\n## Goals:\n\n* Performance\n* Security (see [XSS mitigation](#xss-mitigation))\n* Compact output\n\n\n## Non-goals:\n\n* Human-readable output\n* Stringifying functions or non-POJOs\n\n\n## Usage\n\n```js\nimport devalue from 'devalue';\n\nlet obj = { a: 1, b: 2 };\nobj.c = 3;\n\ndevalue(obj); // '{a:1,b:2,c:3}'\n\nobj.self = obj;\ndevalue(obj); // '(function(a){a.a=1;a.b=2;a.c=3;a.self=a;return a}({}))'\n```\n\nIf `devalue` encounters a function or a non-POJO, it will throw an error.\n\n\n## XSS mitigation\n\nSay you're server-rendering a page and want to serialize some state, which could include user input. `JSON.stringify` doesn't protect against XSS attacks:\n\n```js\nconst state = {\n  userinput: `</script><script src='https://evil.com/mwahaha.js'>`\n};\n\nconst template = `\n<script>\n  // NEVER DO THIS\n  var preloaded = ${JSON.stringify(state)};\n</script>`;\n```\n\nWhich would result in this:\n\n```html\n<script>\n  // NEVER DO THIS\n  var preloaded = {\"userinput\":\"</script><script src='https://evil.com/mwahaha.js'>\"};\n</script>\n```\n\nUsing `devalue`, we're protected against that attack:\n\n```js\nconst template = `\n<script>\n  var preloaded = ${devalue(state)};\n</script>`;\n```\n\n```html\n<script>\n  var preloaded = {userinput:\"\\\\u003C\\\\u002Fscript\\\\u003E\\\\u003Cscript src=\\'https:\\\\u002F\\\\u002Fevil.com\\\\u002Fmwahaha.js\\'\\\\u003E\"};\n</script>\n```\n\nThis, along with the fact that `devalue` bails on functions and non-POJOs, stops attackers from executing arbitrary code. Strings generated by `devalue` can be safely deserialized with `eval` or `new Function`:\n\n```js\nconst value = (0,eval)('(' + str + ')');\n```\n\n\n## Other security considerations\n\nWhile `devalue` prevents the XSS vulnerability shown above, meaning you can use it to send data from server to client, **you should not send user data from client to server** using the same method. Since it has to be evaluated, an attacker that successfully submitted data that bypassed `devalue` would have access to your system.\n\nWhen using `eval`, ensure that you call it *indirectly* so that the evaluated code doesn't have access to the surrounding scope:\n\n```js\n{\n  const sensitiveData = 'Setec Astronomy';\n  eval('sendToEvilServer(sensitiveData)'); // pwned :(\n  (0,eval)('sendToEvilServer(sensitiveData)'); // nice try, evildoer!\n}\n```\n\nUsing `new Function(code)` is akin to using indirect eval.\n\n\n## See also\n\n* [lave](https://github.com/jed/lave) by Jed Schmidt\n* [arson](https://github.com/benjamn/arson) by Ben Newman\n* [tosource](https://github.com/marcello3d/node-tosource) by Marcello Bast√©a-Forte\n* [serialize-javascript](https://github.com/yahoo/serialize-javascript) by Eric Ferraiuolo\n* [jsesc](https://github.com/mathiasbynens/jsesc) by Mathias Bynens\n\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Rich-Harris/devalue.git"
  },
  "scripts": {
    "build": "npm run build-declarations && rollup -c",
    "build-declarations": "tsc -d && node scripts/move-type-declarations.js",
    "prepublishOnly": "npm run build && npm test",
    "test": "mocha --opts mocha.opts"
  },
  "types": "types/index.d.ts",
  "version": "2.0.1"
}
