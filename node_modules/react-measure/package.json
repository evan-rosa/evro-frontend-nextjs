{
  "_args": [
    [
      {
        "raw": "react-measure@^2.2.4",
        "scope": null,
        "escapedName": "react-measure",
        "name": "react-measure",
        "rawSpec": "^2.2.4",
        "spec": ">=2.2.4 <3.0.0",
        "type": "range"
      },
      "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/@nivo/core"
    ]
  ],
  "_from": "react-measure@^2.2.4",
  "_hasShrinkwrap": false,
  "_id": "react-measure@2.3.0",
  "_location": "/react-measure",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-measure_2.3.0_1555621209285_0.7567107303543357"
  },
  "_npmUser": {
    "name": "souporserious",
    "email": "ftntravis@gmail.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-measure@^2.2.4",
    "scope": null,
    "escapedName": "react-measure",
    "name": "react-measure",
    "rawSpec": "^2.2.4",
    "spec": ">=2.2.4 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@nivo/core",
    "/@nivo/tooltip"
  ],
  "_resolved": "https://registry.npmjs.org/react-measure/-/react-measure-2.3.0.tgz",
  "_shasum": "75835d39abec9ae13517f35a819c160997a7a44e",
  "_shrinkwrap": null,
  "_spec": "react-measure@^2.2.4",
  "_where": "/Users/Evro/Documents/Career/evro-io/evro-web-live/nextjs/evro-heroku-stage/frontend/node_modules/@nivo/core",
  "author": {
    "name": "Travis Arnold",
    "email": "travis@souporserious.com",
    "url": "http://souporserious.com"
  },
  "bugs": {
    "url": "https://github.com/souporserious/react-measure/issues"
  },
  "dependencies": {
    "@babel/runtime": "^7.2.0",
    "get-node-dimensions": "^1.2.1",
    "prop-types": "^15.6.2",
    "resize-observer-polyfill": "^1.5.0"
  },
  "description": "Compute measurements of React components.",
  "devDependencies": {
    "@babel/cli": "^7.2.0",
    "@babel/core": "^7.2.0",
    "@babel/plugin-proposal-class-properties": "^7.2.1",
    "@babel/plugin-transform-runtime": "^7.2.0",
    "@babel/preset-env": "^7.2.0",
    "@babel/preset-react": "^7.0.0",
    "cross-env": "^5.2.0",
    "jest": "^24.0.0",
    "prettier": "^1.16.4",
    "react": "^16.7.0",
    "react-dom": "^16.7.0",
    "rollup": "^0.67.4",
    "rollup-plugin-babel": "^4.1.0",
    "rollup-plugin-node-resolve": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "75835d39abec9ae13517f35a819c160997a7a44e",
    "integrity": "sha512-dwAvmiOeblj5Dvpnk8Jm7Q8B4THF/f1l1HtKVi0XDecsG6LXwGvzV5R1H32kq3TW6RW64OAf5aoQxpIgLa4z8A==",
    "tarball": "https://registry.npmjs.org/react-measure/-/react-measure-2.3.0.tgz",
    "fileCount": 19,
    "unpackedSize": 80397,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcuOVaCRA9TVsSAnZWagAAn2cQAIDsQN+XKWIkQxHoPTxv\ney91i89FM5fvySPx0HUVmrf0OcpD8uC9EBtfAvc65R+aTCVRgnUFcimD3OOq\nYFjtk3ejb4drlpec9c62DO+HG+Tz9zElwmwvbJTUi1CyOdjxU4koH6jBUQSq\nP/RTii5DU6Bc+FLqrsaMPvnOTov6UP1Fo1uF3s8OPKQAtuGo0fshO4mKx/km\n2Cnp1mELIh3Jke59yVq+1zF8M5f40wfGoaX0ocJmo0rlMaHx6dUgNH2fS2XR\nkBNKCotVuaGr2pAQqqxDXYG0i7DIEGAID5FutXKlHxbr7qOIIajxRiesYeBq\n4bY5Uh8mucdK7qSA2Py0fxfXh3Qj2+17Ttd/vZRVe4tOcDfE/OySCBjEu8V/\nnjledKvkw1h4nBQlMtp0qPiH9REc3ODPK6S1WRS1Eilx3Cjowv1zBfwG3Jb5\n0gdnuM2E3bd4WeZhZiRZAudjvLJZDXJ8pza/qz0uNsceh69obKBa1AlF9bXw\ni72tksSt6AObiwkKptrrvgy2VQISLxObMhXZCN5TrJ0C8+qOVN7keqZBcKKT\n9cev3Lywkr6AHG+64+a/cbgqHATpEzWe5ZIffpNq/3aOb4h7Gq8qIJb7+DaH\n0UJl7ZCvAR6uXxwnQpMhWSYsAahCeiNVh2CEHR0tlEmswn0epTxKO+YoPRBO\n0y2r\r\n=YuOr\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "dist",
    "src"
  ],
  "homepage": "https://github.com/souporserious/react-measure",
  "jest": {
    "roots": [
      "<rootDir>/src"
    ]
  },
  "keywords": [
    "react",
    "component",
    "measure",
    "measurements",
    "dimensions",
    "element-queries",
    "container-queries",
    "size"
  ],
  "license": "MIT",
  "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2018 React Measure authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "main": "dist/index.cjs.js",
  "maintainers": [
    {
      "name": "souporserious",
      "email": "ftntravis@gmail.com"
    }
  ],
  "module": "dist/index.esm.js",
  "name": "react-measure",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">0.13.0",
    "react-dom": ">0.13.0"
  },
  "readme": "## üìè React Measure\n\n[![npm version](https://badge.fury.io/js/react-measure.svg)](https://badge.fury.io/js/react-measure)\n[![Dependency Status](https://david-dm.org/souporserious/react-measure.svg)](https://david-dm.org/souporserious/react-measure)\n\nCompute measurements of React components. Uses a\n[`ResizeObserver`](https://developers.google.com/web/updates/2016/10/resizeobserver)\nto detect when an element's dimensions have changed.\n\nIncludes a\n[polyfill for `ResizeObserver`](https://github.com/que-etc/resize-observer-polyfill)\nin unsupported browsers.\n\n## Install\n\n`yarn add react-measure`\n\n`npm install react-measure --save`\n\n```html\n<script src=\"https://unpkg.com/react-measure/dist/index.umd.js\"></script>\n(UMD library exposed as `ReactMeasure`)\n```\n\n## Measure Component\n\nWrap any child component and calculate its client rect.\n\n### Props\n\n#### `client`: PropTypes.bool\n\nAdds the following to `contentRect.client` returned in the child function.\n\n[clientTop](https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop),\n[clientLeft](https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft),\n[clientWidth](https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth),\nand\n[clientHeight](https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight).\n\n#### `offset`: PropTypes.bool\n\nAdds the following to `contentRect.offset` returned in the child function.\n\n[offsetTop](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetTop),\n[offsetLeft](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetLeft),\n[offsetWidth](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetWidth),\nand\n[offsetHeight](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight).\n\n#### `scroll`: PropTypes.bool\n\nAdds the following to `contentRect.scroll` returned in the child function.\n\n[scrollTop](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop),\n[scrollLeft](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft),\n[scrollWidth](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth),\nand\n[scrollHeight](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight).\n\n#### `bounds`: PropTypes.bool\n\nUses\n[getBoundingClientRect](https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect)\nto calculate the element rect and add it to `contentRect.bounds` returned in the\nchild function.\n\n#### `margin`: PropTypes.bool\n\nUses\n[getComputedStyle](https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle)\nto calculate margins and add it to `contentRect.margin` returned in the child\nfunction.\n\n#### `innerRef`: PropTypes.func\n\nUse this to access the internal component `ref`.\n\n#### `onResize`: PropTypes.func\n\nCallback invoked when either element width or height have changed. Note that this will be called twice on mount to get the initial values. The first call will come from `componentDidMount` while the second call will come from the `ResizeObserver`.\n\n#### `children`: PropTypes.func\n\nChildren must be a function. Will receive the following object shape:\n\n- `measureRef`: must be passed down to your component's ref in order to obtain a\n  proper node to measure\n\n- `measure`: use to programmatically measure your component, calls the internal\n  `measure` method in `withContentRect`\n\n- `contentRect`: this will contain any of the following allowed rects from\n  above: `client`, `offset`, `scroll`, `bounds`, or `margin`. It will also\n  include `entry` from the `ResizeObserver` when available.\n\n### Example\n\n```javascript\nimport Measure from 'react-measure'\nimport classNames from 'classnames'\n\nclass ItemToMeasure extends Component {\n  state = {\n    dimensions: {\n      width: -1,\n      height: -1,\n    },\n  }\n\n  render() {\n    const { width, height } = this.state.dimensions\n    const className = classNames(width < 400 && 'small-width-modifier')\n\n    return (\n      <Measure\n        bounds\n        onResize={contentRect => {\n          this.setState({ dimensions: contentRect.bounds })\n        }}\n      >\n        {({ measureRef }) => (\n          <div ref={measureRef} className={className}>\n            I can do cool things with my dimensions now :D\n            {height > 250 && (\n              <div>Render responsive content based on the component size!</div>\n            )}\n          </div>\n        )}\n      </Measure>\n    )\n  }\n}\n```\n\n## withContentRect(types) HoC\n\nA higher-order component that provides dimensions to the wrapped component.\nAccepts `types`, which determines what measurements are returned, similar to\nabove. Then returns a function to pass the component you want measured.\n\nPass an array or single value of either `client`, `offset`, `scroll`, `bounds`,\nor `margin` to calculate and receive those measurements as the prop\n`contentRect` in your wrapped component. You can also use the `measure` function\npassed down to programmatically measure your component if you need to. And\nfinally, remember to pass down the `measureRef` to the component you want\nmeasured.\n\nPasses down the same props as the `Measure` child function above, `measureRef`,\n`measure`, and `contentRect`.\n\nFun fact, the `Measure` component is a thin wrapper around `withContentRect`.\nJust check\n[the source](https://github.com/souporserious/react-measure/blob/master/src/Measure.js).\nThis means your wrapped component will accept the same props as `Measure` does\nüòä\n\n### Example\n\n```javascript\nimport { withContentRect } from 'react-measure'\n\nconst ItemToMeasure = withContentRect('bounds')(\n  ({ measureRef, measure, contentRect }) => (\n    <div ref={measureRef}>\n      Some content here\n      <pre>{JSON.stringify(contentRect, null, 2)}</pre>\n    </div>\n  )\n)\n```\n\n## Run Example\n\nclone repo\n\n`git clone git@github.com:souporserious/react-measure.git`\n\nmove into folder\n\n`cd ~/react-measure`\n\ninstall package dependencies\n\n`yarn`\n\nmove into site folder and install local site dependencies\n\n`cd ~/site && yarn`\n\nrun development mode\n\n`yarn gatsby develop`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/souporserious/react-measure.git"
  },
  "scripts": {
    "build": "rollup -c",
    "prepublishOnly": "npm run build",
    "prettier": "prettier --write 'src/**/*.{js,json,css}'",
    "test": "jest --env=jsdom",
    "test:ci": "cross-env CI=1 jest --env=jsdom"
  },
  "version": "2.3.0"
}
